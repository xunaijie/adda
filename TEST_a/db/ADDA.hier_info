|ADDA
DA_CLK <= DA:inst.DA_CLK
CLOCK => DA:inst.CLK
CLOCK => AD:inst2.CLK
CLOCK => OledDriver_WFA:inst9.clk_in
CLOCK => bin_bcd_16:inst8.clk
CLOCK => convert:inst5.clk
CLOCK => vpp:inst4.clk
CLOCK => SIN:inst1.clock
CLOCK => SIGN:inst3.acq_clk
AD_CLK <= AD:inst2.AD_CLK
AD_DB[0] => AD:inst2.AD_IN[0]
AD_DB[1] => AD:inst2.AD_IN[1]
AD_DB[2] => AD:inst2.AD_IN[2]
AD_DB[3] => AD:inst2.AD_IN[3]
AD_DB[4] => AD:inst2.AD_IN[4]
AD_DB[5] => AD:inst2.AD_IN[5]
AD_DB[6] => AD:inst2.AD_IN[6]
AD_DB[7] => AD:inst2.AD_IN[7]
SRAM_NCS <= <VCC>
F_NCE <= <VCC>
oled_rst <= OledDriver_WFA:inst9.oled_rst_n_out
oled_dc <= OledDriver_WFA:inst9.oled_dc_out
oled_clk <= OledDriver_WFA:inst9.oled_clk_out
oled_data <= OledDriver_WFA:inst9.oled_data_out
oled_cs <= OledDriver_WFA:inst9.oled_cs_n_out
DA_DB[0] <= SIN:inst1.q[0]
DA_DB[1] <= SIN:inst1.q[1]
DA_DB[2] <= SIN:inst1.q[2]
DA_DB[3] <= SIN:inst1.q[3]
DA_DB[4] <= SIN:inst1.q[4]
DA_DB[5] <= SIN:inst1.q[5]
DA_DB[6] <= SIN:inst1.q[6]
DA_DB[7] <= SIN:inst1.q[7]


|ADDA|DA:inst
CLK => DA_A[0]~reg0.CLK
CLK => DA_A[1]~reg0.CLK
CLK => DA_A[2]~reg0.CLK
CLK => DA_A[3]~reg0.CLK
CLK => DA_A[4]~reg0.CLK
CLK => DA_A[5]~reg0.CLK
CLK => DA_A[6]~reg0.CLK
CLK => DA_A[7]~reg0.CLK
CLK => DA_A[8]~reg0.CLK
CLK => COUNT[0].CLK
CLK => COUNT[1].CLK
CLK => COUNT[2].CLK
CLK => COUNT[3].CLK
CLK => COUNT[4].CLK
CLK => COUNT[5].CLK
CLK => COUNT[6].CLK
CLK => COUNT[7].CLK
CLK => COUNT[8].CLK
CLK => DA_CLK.DATAIN
DA_CLK <= CLK.DB_MAX_OUTPUT_PORT_TYPE
DA_A[0] <= DA_A[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA_A[1] <= DA_A[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA_A[2] <= DA_A[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA_A[3] <= DA_A[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA_A[4] <= DA_A[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA_A[5] <= DA_A[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA_A[6] <= DA_A[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA_A[7] <= DA_A[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
DA_A[8] <= DA_A[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ADDA|AD:inst2
CLK => AD_OUT[0]~reg0.CLK
CLK => AD_OUT[1]~reg0.CLK
CLK => AD_OUT[2]~reg0.CLK
CLK => AD_OUT[3]~reg0.CLK
CLK => AD_OUT[4]~reg0.CLK
CLK => AD_OUT[5]~reg0.CLK
CLK => AD_OUT[6]~reg0.CLK
CLK => AD_OUT[7]~reg0.CLK
CLK => AD_CLK.DATAIN
AD_IN[0] => AD_OUT[0]~reg0.DATAIN
AD_IN[1] => AD_OUT[1]~reg0.DATAIN
AD_IN[2] => AD_OUT[2]~reg0.DATAIN
AD_IN[3] => AD_OUT[3]~reg0.DATAIN
AD_IN[4] => AD_OUT[4]~reg0.DATAIN
AD_IN[5] => AD_OUT[5]~reg0.DATAIN
AD_IN[6] => AD_OUT[6]~reg0.DATAIN
AD_IN[7] => AD_OUT[7]~reg0.DATAIN
AD_CLK <= CLK.DB_MAX_OUTPUT_PORT_TYPE
AD_OUT[0] <= AD_OUT[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
AD_OUT[1] <= AD_OUT[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
AD_OUT[2] <= AD_OUT[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
AD_OUT[3] <= AD_OUT[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
AD_OUT[4] <= AD_OUT[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
AD_OUT[5] <= AD_OUT[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
AD_OUT[6] <= AD_OUT[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
AD_OUT[7] <= AD_OUT[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ADDA|OledDriver_WFA:inst9
clk_in => delay_cnt[0].CLK
clk_in => delay_cnt[1].CLK
clk_in => delay_cnt[2].CLK
clk_in => delay_cnt[3].CLK
clk_in => delay_cnt[4].CLK
clk_in => delay_cnt[5].CLK
clk_in => delay_cnt[6].CLK
clk_in => delay_cnt[7].CLK
clk_in => delay_cnt[8].CLK
clk_in => delay_cnt[9].CLK
clk_in => delay_cnt[10].CLK
clk_in => delay_cnt[11].CLK
clk_in => delay_cnt[12].CLK
clk_in => delay_cnt[13].CLK
clk_in => delay_cnt[14].CLK
clk_in => delay_cnt[15].CLK
clk_in => delay_cnt[16].CLK
clk_in => delay_cnt[17].CLK
clk_in => delay_cnt[18].CLK
clk_in => delay_cnt[19].CLK
clk_in => delay_cnt[20].CLK
clk_in => delay_cnt[21].CLK
clk_in => delay_cnt[22].CLK
clk_in => delay_cnt[23].CLK
clk_in => delay_cnt[24].CLK
clk_in => delay_cnt[25].CLK
clk_in => temp_cnt[0].CLK
clk_in => temp_cnt[1].CLK
clk_in => temp_cnt[2].CLK
clk_in => temp_cnt[3].CLK
clk_in => temp_cnt[4].CLK
clk_in => temp_cnt[5].CLK
clk_in => temp_cnt[6].CLK
clk_in => temp_cnt[7].CLK
clk_in => temp_cnt[8].CLK
clk_in => data_reg[0].CLK
clk_in => data_reg[1].CLK
clk_in => data_reg[2].CLK
clk_in => data_reg[3].CLK
clk_in => data_reg[4].CLK
clk_in => data_reg[5].CLK
clk_in => data_reg[6].CLK
clk_in => data_reg[7].CLK
clk_in => oled_data_out~reg0.CLK
clk_in => shift_cnt[0].CLK
clk_in => shift_cnt[1].CLK
clk_in => shift_cnt[2].CLK
clk_in => shift_cnt[3].CLK
clk_in => oled_rst_n_out~reg0.CLK
clk_in => char_reg[0].CLK
clk_in => char_reg[1].CLK
clk_in => char_reg[2].CLK
clk_in => char_reg[3].CLK
clk_in => char_reg[4].CLK
clk_in => char_reg[5].CLK
clk_in => char_reg[6].CLK
clk_in => oled_dc_out~reg0.CLK
clk_in => oled_cs_n_out~reg0.CLK
clk_in => shift_flag.CLK
clk_in => data_state_cnt[0].CLK
clk_in => data_state_cnt[1].CLK
clk_in => data_state_cnt[2].CLK
clk_in => data_state_cnt[3].CLK
clk_in => data_state_cnt[4].CLK
clk_in => data_state_cnt[5].CLK
clk_in => data_state_cnt[6].CLK
clk_in => data_state_cnt[7].CLK
clk_in => clk_div.CLK
clk_in => clk_cnt[0].CLK
clk_in => clk_cnt[1].CLK
clk_in => clk_cnt[2].CLK
clk_in => clk_cnt[3].CLK
clk_in => clk_cnt[4].CLK
clk_in => clk_cnt[5].CLK
clk_in => clk_cnt[6].CLK
clk_in => clk_cnt[7].CLK
clk_in => clk_cnt[8].CLK
clk_in => clk_cnt[9].CLK
clk_in => clk_cnt[10].CLK
clk_in => clk_cnt[11].CLK
clk_in => clk_cnt[12].CLK
clk_in => clk_cnt[13].CLK
clk_in => clk_cnt[14].CLK
clk_in => clk_cnt[15].CLK
clk_in => data_state_back~1.DATAIN
clk_in => data_state~4.DATAIN
clk_in => clk_div_state~3.DATAIN
rst_n_in => data_state_back.DISPLAY.OUTPUTSELECT
rst_n_in => data_state_back.CLEAR.OUTPUTSELECT
rst_n_in => oled_cs_n_out~reg0.PRESET
rst_n_in => shift_flag.ACLR
rst_n_in => data_state_cnt[0].ACLR
rst_n_in => data_state_cnt[1].ACLR
rst_n_in => data_state_cnt[2].ACLR
rst_n_in => data_state_cnt[3].ACLR
rst_n_in => data_state_cnt[4].ACLR
rst_n_in => data_state_cnt[5].ACLR
rst_n_in => data_state_cnt[6].ACLR
rst_n_in => data_state_cnt[7].ACLR
rst_n_in => clk_cnt[0].ACLR
rst_n_in => clk_cnt[1].ACLR
rst_n_in => clk_cnt[2].ACLR
rst_n_in => clk_cnt[3].ACLR
rst_n_in => clk_cnt[4].ACLR
rst_n_in => clk_cnt[5].ACLR
rst_n_in => clk_cnt[6].ACLR
rst_n_in => clk_cnt[7].ACLR
rst_n_in => clk_cnt[8].ACLR
rst_n_in => clk_cnt[9].ACLR
rst_n_in => clk_cnt[10].ACLR
rst_n_in => clk_cnt[11].ACLR
rst_n_in => clk_cnt[12].ACLR
rst_n_in => clk_cnt[13].ACLR
rst_n_in => clk_cnt[14].ACLR
rst_n_in => clk_cnt[15].ACLR
rst_n_in => data_state~6.DATAIN
rst_n_in => clk_div_state~5.DATAIN
rst_n_in => clk_div.ENA
rst_n_in => delay_cnt[0].ENA
rst_n_in => oled_dc_out~reg0.ENA
rst_n_in => char_reg[6].ENA
rst_n_in => char_reg[5].ENA
rst_n_in => char_reg[4].ENA
rst_n_in => char_reg[3].ENA
rst_n_in => char_reg[2].ENA
rst_n_in => char_reg[1].ENA
rst_n_in => char_reg[0].ENA
rst_n_in => oled_rst_n_out~reg0.ENA
rst_n_in => shift_cnt[3].ENA
rst_n_in => shift_cnt[2].ENA
rst_n_in => shift_cnt[1].ENA
rst_n_in => shift_cnt[0].ENA
rst_n_in => oled_data_out~reg0.ENA
rst_n_in => data_reg[7].ENA
rst_n_in => data_reg[6].ENA
rst_n_in => data_reg[5].ENA
rst_n_in => data_reg[4].ENA
rst_n_in => data_reg[3].ENA
rst_n_in => data_reg[2].ENA
rst_n_in => data_reg[1].ENA
rst_n_in => data_reg[0].ENA
rst_n_in => temp_cnt[8].ENA
rst_n_in => temp_cnt[7].ENA
rst_n_in => temp_cnt[6].ENA
rst_n_in => temp_cnt[5].ENA
rst_n_in => temp_cnt[4].ENA
rst_n_in => temp_cnt[3].ENA
rst_n_in => temp_cnt[2].ENA
rst_n_in => temp_cnt[1].ENA
rst_n_in => temp_cnt[0].ENA
rst_n_in => delay_cnt[25].ENA
rst_n_in => delay_cnt[24].ENA
rst_n_in => delay_cnt[23].ENA
rst_n_in => delay_cnt[22].ENA
rst_n_in => delay_cnt[21].ENA
rst_n_in => delay_cnt[20].ENA
rst_n_in => delay_cnt[19].ENA
rst_n_in => delay_cnt[18].ENA
rst_n_in => delay_cnt[17].ENA
rst_n_in => delay_cnt[16].ENA
rst_n_in => delay_cnt[15].ENA
rst_n_in => delay_cnt[14].ENA
rst_n_in => delay_cnt[13].ENA
rst_n_in => delay_cnt[12].ENA
rst_n_in => delay_cnt[11].ENA
rst_n_in => delay_cnt[10].ENA
rst_n_in => delay_cnt[9].ENA
rst_n_in => delay_cnt[8].ENA
rst_n_in => delay_cnt[7].ENA
rst_n_in => delay_cnt[6].ENA
rst_n_in => delay_cnt[5].ENA
rst_n_in => delay_cnt[4].ENA
rst_n_in => delay_cnt[3].ENA
rst_n_in => delay_cnt[2].ENA
rst_n_in => delay_cnt[1].ENA
oled_rst_n_out <= oled_rst_n_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
oled_cs_n_out <= oled_cs_n_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
oled_dc_out <= oled_dc_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
oled_clk_out <= clk_div.DB_MAX_OUTPUT_PORT_TYPE
oled_data_out <= oled_data_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
am_bcd_in[0] => Selector13.IN14
am_bcd_in[1] => Selector12.IN14
am_bcd_in[2] => Selector11.IN14
am_bcd_in[3] => Selector10.IN14
am_bcd_in[4] => Selector13.IN13
am_bcd_in[5] => Selector12.IN13
am_bcd_in[6] => Selector11.IN13
am_bcd_in[7] => Selector10.IN13
am_bcd_in[8] => Selector13.IN12
am_bcd_in[9] => Selector12.IN12
am_bcd_in[10] => Selector11.IN12
am_bcd_in[11] => Selector10.IN12
am_bcd_in[12] => Selector13.IN11
am_bcd_in[13] => Selector12.IN11
am_bcd_in[14] => Selector11.IN11
am_bcd_in[15] => Selector10.IN11
am_bcd_in[16] => Selector13.IN10
am_bcd_in[17] => Selector12.IN10
am_bcd_in[18] => Selector11.IN10
am_bcd_in[19] => Selector10.IN10


|ADDA|bin_bcd_16:inst8
clk => wan[0].CLK
clk => wan[1].CLK
clk => wan[2].CLK
clk => wan[3].CLK
clk => tho[0].CLK
clk => tho[1].CLK
clk => tho[2].CLK
clk => tho[3].CLK
clk => hun[0].CLK
clk => hun[1].CLK
clk => hun[2].CLK
clk => hun[3].CLK
clk => ten[0].CLK
clk => ten[1].CLK
clk => ten[2].CLK
clk => ten[3].CLK
clk => one[0].CLK
clk => one[1].CLK
clk => one[2].CLK
clk => one[3].CLK
rst_n => wan[0].ACLR
rst_n => wan[1].ACLR
rst_n => wan[2].ACLR
rst_n => wan[3].ACLR
rst_n => tho[0].ACLR
rst_n => tho[1].ACLR
rst_n => tho[2].ACLR
rst_n => tho[3].ACLR
rst_n => hun[0].ACLR
rst_n => hun[1].ACLR
rst_n => hun[2].ACLR
rst_n => hun[3].ACLR
rst_n => ten[0].ACLR
rst_n => ten[1].ACLR
rst_n => ten[2].ACLR
rst_n => ten[3].ACLR
rst_n => one[0].ACLR
rst_n => one[1].ACLR
rst_n => one[2].ACLR
rst_n => one[3].ACLR
bin[0] => one[0].DATAIN
bin[1] => Add50.IN8
bin[1] => shift_reg.DATAA
bin[2] => Add45.IN8
bin[2] => shift_reg.DATAA
bin[3] => Add40.IN8
bin[3] => shift_reg.DATAA
bin[4] => Add35.IN8
bin[4] => shift_reg.DATAA
bin[5] => Add30.IN8
bin[5] => shift_reg.DATAA
bin[6] => Add25.IN8
bin[6] => shift_reg.DATAA
bin[7] => Add20.IN8
bin[7] => shift_reg.DATAA
bin[8] => Add16.IN8
bin[8] => shift_reg.DATAA
bin[9] => Add12.IN8
bin[9] => shift_reg.DATAA
bin[10] => Add9.IN8
bin[10] => shift_reg.DATAA
bin[11] => Add6.IN8
bin[11] => shift_reg.DATAA
bin[12] => Add4.IN8
bin[12] => shift_reg.DATAA
bin[13] => Add2.IN8
bin[13] => shift_reg.DATAA
bin[14] => Add1.IN8
bin[14] => shift_reg.DATAA
bin[15] => Add0.IN2
bin[15] => shift_reg.DATAA
bcd[0] <= one[0].DB_MAX_OUTPUT_PORT_TYPE
bcd[1] <= one[1].DB_MAX_OUTPUT_PORT_TYPE
bcd[2] <= one[2].DB_MAX_OUTPUT_PORT_TYPE
bcd[3] <= one[3].DB_MAX_OUTPUT_PORT_TYPE
bcd[4] <= ten[0].DB_MAX_OUTPUT_PORT_TYPE
bcd[5] <= ten[1].DB_MAX_OUTPUT_PORT_TYPE
bcd[6] <= ten[2].DB_MAX_OUTPUT_PORT_TYPE
bcd[7] <= ten[3].DB_MAX_OUTPUT_PORT_TYPE
bcd[8] <= hun[0].DB_MAX_OUTPUT_PORT_TYPE
bcd[9] <= hun[1].DB_MAX_OUTPUT_PORT_TYPE
bcd[10] <= hun[2].DB_MAX_OUTPUT_PORT_TYPE
bcd[11] <= hun[3].DB_MAX_OUTPUT_PORT_TYPE
bcd[12] <= tho[0].DB_MAX_OUTPUT_PORT_TYPE
bcd[13] <= tho[1].DB_MAX_OUTPUT_PORT_TYPE
bcd[14] <= tho[2].DB_MAX_OUTPUT_PORT_TYPE
bcd[15] <= tho[3].DB_MAX_OUTPUT_PORT_TYPE
bcd[16] <= wan[0].DB_MAX_OUTPUT_PORT_TYPE
bcd[17] <= wan[1].DB_MAX_OUTPUT_PORT_TYPE
bcd[18] <= wan[2].DB_MAX_OUTPUT_PORT_TYPE
bcd[19] <= wan[3].DB_MAX_OUTPUT_PORT_TYPE


|ADDA|convert:inst5
clk => bin_send[0]~reg0.CLK
clk => bin_send[1]~reg0.CLK
clk => bin_send[2]~reg0.CLK
clk => bin_send[3]~reg0.CLK
clk => bin_send[4]~reg0.CLK
clk => bin_send[5]~reg0.CLK
clk => bin_send[6]~reg0.CLK
clk => bin_send[7]~reg0.CLK
clk => bin_send[8]~reg0.CLK
clk => bin_send[9]~reg0.CLK
clk => bin_send[10]~reg0.CLK
clk => bin_send[11]~reg0.CLK
clk => bin_send[12]~reg0.CLK
clk => bin_send[13]~reg0.CLK
clk => bin_send[14]~reg0.CLK
clk => bin_send[15]~reg0.CLK
clk => vp[0].CLK
clk => vp[1].CLK
clk => vp[2].CLK
clk => vp[3].CLK
clk => vp[4].CLK
clk => vp[5].CLK
clk => vp[6].CLK
clk => vp[7].CLK
clk => vp[8].CLK
clk => vp[9].CLK
clk => vp[10].CLK
clk => vp[11].CLK
clk => vp[12].CLK
clk => vp[13].CLK
clk => vp[14].CLK
clk => vp[15].CLK
vpp_re[0] => Mult0.IN13
vpp_re[1] => Mult0.IN12
vpp_re[2] => Mult0.IN11
vpp_re[3] => Mult0.IN10
vpp_re[4] => Mult0.IN9
vpp_re[5] => Mult0.IN8
vpp_re[6] => Mult0.IN7
vpp_re[7] => Mult0.IN6
bin_send[0] <= bin_send[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[1] <= bin_send[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[2] <= bin_send[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[3] <= bin_send[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[4] <= bin_send[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[5] <= bin_send[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[6] <= bin_send[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[7] <= bin_send[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[8] <= bin_send[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[9] <= bin_send[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[10] <= bin_send[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[11] <= bin_send[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[12] <= bin_send[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[13] <= bin_send[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[14] <= bin_send[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bin_send[15] <= bin_send[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|ADDA|vpp:inst4
clk => vol_min[0].CLK
clk => vol_min[1].CLK
clk => vol_min[2].CLK
clk => vol_min[3].CLK
clk => vol_min[4].CLK
clk => vol_min[5].CLK
clk => vol_min[6].CLK
clk => vol_min[7].CLK
clk => vol_max[0].CLK
clk => vol_max[1].CLK
clk => vol_max[2].CLK
clk => vol_max[3].CLK
clk => vol_max[4].CLK
clk => vol_max[5].CLK
clk => vol_max[6].CLK
clk => vol_max[7].CLK
clk => count_1[0].CLK
clk => count_1[1].CLK
clk => count_1[2].CLK
clk => count_1[3].CLK
clk => count_1[4].CLK
clk => count_1[5].CLK
clk => count_1[6].CLK
clk => count_1[7].CLK
clk => count_1[8].CLK
clk => count_1[9].CLK
clk => count_1[10].CLK
clk => count_1[11].CLK
clk => count_1[12].CLK
clk => count_1[13].CLK
clk => count_1[14].CLK
clk => count_1[15].CLK
clk => count_1[16].CLK
clk => count_1[17].CLK
clk => count_1[18].CLK
clk => count_1[19].CLK
clk => count_1[20].CLK
clk => count_1[21].CLK
clk => count_1[22].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
ch_dec[0] => LessThan0.IN8
ch_dec[0] => vol_max.DATAB
ch_dec[0] => LessThan1.IN8
ch_dec[0] => vol_min.DATAB
ch_dec[0] => vol_max.DATAB
ch_dec[0] => vol_min.DATAB
ch_dec[1] => LessThan0.IN7
ch_dec[1] => vol_max.DATAB
ch_dec[1] => LessThan1.IN7
ch_dec[1] => vol_min.DATAB
ch_dec[1] => vol_max.DATAB
ch_dec[1] => vol_min.DATAB
ch_dec[2] => LessThan0.IN6
ch_dec[2] => vol_max.DATAB
ch_dec[2] => LessThan1.IN6
ch_dec[2] => vol_min.DATAB
ch_dec[2] => vol_max.DATAB
ch_dec[2] => vol_min.DATAB
ch_dec[3] => LessThan0.IN5
ch_dec[3] => vol_max.DATAB
ch_dec[3] => LessThan1.IN5
ch_dec[3] => vol_min.DATAB
ch_dec[3] => vol_max.DATAB
ch_dec[3] => vol_min.DATAB
ch_dec[4] => LessThan0.IN4
ch_dec[4] => vol_max.DATAB
ch_dec[4] => LessThan1.IN4
ch_dec[4] => vol_min.DATAB
ch_dec[4] => vol_max.DATAB
ch_dec[4] => vol_min.DATAB
ch_dec[5] => LessThan0.IN3
ch_dec[5] => vol_max.DATAB
ch_dec[5] => LessThan1.IN3
ch_dec[5] => vol_min.DATAB
ch_dec[5] => vol_max.DATAB
ch_dec[5] => vol_min.DATAB
ch_dec[6] => LessThan0.IN2
ch_dec[6] => vol_max.DATAB
ch_dec[6] => LessThan1.IN2
ch_dec[6] => vol_min.DATAB
ch_dec[6] => vol_max.DATAB
ch_dec[6] => vol_min.DATAB
ch_dec[7] => LessThan0.IN1
ch_dec[7] => vol_max.DATAB
ch_dec[7] => LessThan1.IN1
ch_dec[7] => vol_min.DATAB
ch_dec[7] => vol_max.DATAB
ch_dec[7] => vol_min.DATAB
vpp_out[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
vpp_out[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
vpp_out[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
vpp_out[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
vpp_out[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
vpp_out[5] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
vpp_out[6] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
vpp_out[7] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIN:inst1
address[0] => address[0].IN1
address[1] => address[1].IN1
address[2] => address[2].IN1
address[3] => address[3].IN1
address[4] => address[4].IN1
address[5] => address[5].IN1
address[6] => address[6].IN1
address[7] => address[7].IN1
address[8] => address[8].IN1
clock => clock.IN1
q[0] <= altsyncram:altsyncram_component.q_a
q[1] <= altsyncram:altsyncram_component.q_a
q[2] <= altsyncram:altsyncram_component.q_a
q[3] <= altsyncram:altsyncram_component.q_a
q[4] <= altsyncram:altsyncram_component.q_a
q[5] <= altsyncram:altsyncram_component.q_a
q[6] <= altsyncram:altsyncram_component.q_a
q[7] <= altsyncram:altsyncram_component.q_a


|ADDA|SIN:inst1|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_6371:auto_generated.address_a[0]
address_a[1] => altsyncram_6371:auto_generated.address_a[1]
address_a[2] => altsyncram_6371:auto_generated.address_a[2]
address_a[3] => altsyncram_6371:auto_generated.address_a[3]
address_a[4] => altsyncram_6371:auto_generated.address_a[4]
address_a[5] => altsyncram_6371:auto_generated.address_a[5]
address_a[6] => altsyncram_6371:auto_generated.address_a[6]
address_a[7] => altsyncram_6371:auto_generated.address_a[7]
address_a[8] => altsyncram_6371:auto_generated.address_a[8]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_6371:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_6371:auto_generated.q_a[0]
q_a[1] <= altsyncram_6371:auto_generated.q_a[1]
q_a[2] <= altsyncram_6371:auto_generated.q_a[2]
q_a[3] <= altsyncram_6371:auto_generated.q_a[3]
q_a[4] <= altsyncram_6371:auto_generated.q_a[4]
q_a[5] <= altsyncram_6371:auto_generated.q_a[5]
q_a[6] <= altsyncram_6371:auto_generated.q_a[6]
q_a[7] <= altsyncram_6371:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|ADDA|SIN:inst1|altsyncram:altsyncram_component|altsyncram_6371:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT


|ADDA|SIGN:inst3
acq_clk => acq_clk.IN1
acq_data_in[0] => acq_data_in[0].IN1
acq_data_in[1] => acq_data_in[1].IN1
acq_data_in[2] => acq_data_in[2].IN1
acq_data_in[3] => acq_data_in[3].IN1
acq_data_in[4] => acq_data_in[4].IN1
acq_data_in[5] => acq_data_in[5].IN1
acq_data_in[6] => acq_data_in[6].IN1
acq_data_in[7] => acq_data_in[7].IN1
acq_trigger_in[0] => acq_trigger_in[0].IN1


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component
acq_clk => sld_signaltap_impl:sld_signaltap_body.acq_clk
acq_clk => acq_trigger_in_reg[0].CLK
acq_clk => acq_data_in_reg[0].CLK
acq_clk => acq_data_in_reg[1].CLK
acq_clk => acq_data_in_reg[2].CLK
acq_clk => acq_data_in_reg[3].CLK
acq_clk => acq_data_in_reg[4].CLK
acq_clk => acq_data_in_reg[5].CLK
acq_clk => acq_data_in_reg[6].CLK
acq_clk => acq_data_in_reg[7].CLK
acq_data_in[0] => acq_data_in_reg[0].DATAIN
acq_data_in[1] => acq_data_in_reg[1].DATAIN
acq_data_in[2] => acq_data_in_reg[2].DATAIN
acq_data_in[3] => acq_data_in_reg[3].DATAIN
acq_data_in[4] => acq_data_in_reg[4].DATAIN
acq_data_in[5] => acq_data_in_reg[5].DATAIN
acq_data_in[6] => acq_data_in_reg[6].DATAIN
acq_data_in[7] => acq_data_in_reg[7].DATAIN
acq_trigger_in[0] => acq_trigger_in_reg[0].DATAIN
acq_storage_qualifier_in[0] => sld_signaltap_impl:sld_signaltap_body.acq_storage_qualifier_in[0]
trigger_in => ~NO_FANOUT~
crc[0] => sld_signaltap_impl:sld_signaltap_body.crc[0]
crc[1] => sld_signaltap_impl:sld_signaltap_body.crc[1]
crc[2] => sld_signaltap_impl:sld_signaltap_body.crc[2]
crc[3] => sld_signaltap_impl:sld_signaltap_body.crc[3]
crc[4] => sld_signaltap_impl:sld_signaltap_body.crc[4]
crc[5] => sld_signaltap_impl:sld_signaltap_body.crc[5]
crc[6] => sld_signaltap_impl:sld_signaltap_body.crc[6]
crc[7] => sld_signaltap_impl:sld_signaltap_body.crc[7]
crc[8] => sld_signaltap_impl:sld_signaltap_body.crc[8]
crc[9] => sld_signaltap_impl:sld_signaltap_body.crc[9]
crc[10] => sld_signaltap_impl:sld_signaltap_body.crc[10]
crc[11] => sld_signaltap_impl:sld_signaltap_body.crc[11]
crc[12] => sld_signaltap_impl:sld_signaltap_body.crc[12]
crc[13] => sld_signaltap_impl:sld_signaltap_body.crc[13]
crc[14] => sld_signaltap_impl:sld_signaltap_body.crc[14]
crc[15] => sld_signaltap_impl:sld_signaltap_body.crc[15]
crc[16] => sld_signaltap_impl:sld_signaltap_body.crc[16]
crc[17] => sld_signaltap_impl:sld_signaltap_body.crc[17]
crc[18] => sld_signaltap_impl:sld_signaltap_body.crc[18]
crc[19] => sld_signaltap_impl:sld_signaltap_body.crc[19]
crc[20] => sld_signaltap_impl:sld_signaltap_body.crc[20]
crc[21] => sld_signaltap_impl:sld_signaltap_body.crc[21]
crc[22] => sld_signaltap_impl:sld_signaltap_body.crc[22]
crc[23] => sld_signaltap_impl:sld_signaltap_body.crc[23]
crc[24] => sld_signaltap_impl:sld_signaltap_body.crc[24]
crc[25] => sld_signaltap_impl:sld_signaltap_body.crc[25]
crc[26] => sld_signaltap_impl:sld_signaltap_body.crc[26]
crc[27] => sld_signaltap_impl:sld_signaltap_body.crc[27]
crc[28] => sld_signaltap_impl:sld_signaltap_body.crc[28]
crc[29] => sld_signaltap_impl:sld_signaltap_body.crc[29]
crc[30] => sld_signaltap_impl:sld_signaltap_body.crc[30]
crc[31] => sld_signaltap_impl:sld_signaltap_body.crc[31]
storage_enable => sld_signaltap_impl:sld_signaltap_body.storage_enable
raw_tck => sld_signaltap_impl:sld_signaltap_body.raw_tck
tdi => sld_signaltap_impl:sld_signaltap_body.tdi
usr1 => sld_signaltap_impl:sld_signaltap_body.usr1
rti => sld_signaltap_impl:sld_signaltap_body.rti
shift => sld_signaltap_impl:sld_signaltap_body.shift
update => sld_signaltap_impl:sld_signaltap_body.update
jtag_state_cdr => sld_signaltap_impl:sld_signaltap_body.jtag_state_cdr
jtag_state_sdr => sld_signaltap_impl:sld_signaltap_body.jtag_state_sdr
jtag_state_e1dr => sld_signaltap_impl:sld_signaltap_body.jtag_state_e1dr
jtag_state_udr => sld_signaltap_impl:sld_signaltap_body.jtag_state_udr
jtag_state_uir => sld_signaltap_impl:sld_signaltap_body.jtag_state_uir
clr => sld_signaltap_impl:sld_signaltap_body.clr
ena => sld_signaltap_impl:sld_signaltap_body.ena
ir_in[0] => sld_signaltap_impl:sld_signaltap_body.ir_in[0]
ir_in[1] => sld_signaltap_impl:sld_signaltap_body.ir_in[1]
ir_in[2] => sld_signaltap_impl:sld_signaltap_body.ir_in[2]
ir_in[3] => sld_signaltap_impl:sld_signaltap_body.ir_in[3]
ir_in[4] => sld_signaltap_impl:sld_signaltap_body.ir_in[4]
ir_in[5] => sld_signaltap_impl:sld_signaltap_body.ir_in[5]
ir_in[6] => sld_signaltap_impl:sld_signaltap_body.ir_in[6]
ir_in[7] => sld_signaltap_impl:sld_signaltap_body.ir_in[7]
ir_out[0] <= sld_signaltap_impl:sld_signaltap_body.ir_out[0]
ir_out[1] <= sld_signaltap_impl:sld_signaltap_body.ir_out[1]
ir_out[2] <= sld_signaltap_impl:sld_signaltap_body.ir_out[2]
ir_out[3] <= sld_signaltap_impl:sld_signaltap_body.ir_out[3]
ir_out[4] <= sld_signaltap_impl:sld_signaltap_body.ir_out[4]
ir_out[5] <= sld_signaltap_impl:sld_signaltap_body.ir_out[5]
ir_out[6] <= sld_signaltap_impl:sld_signaltap_body.ir_out[6]
ir_out[7] <= sld_signaltap_impl:sld_signaltap_body.ir_out[7]
tdo <= sld_signaltap_impl:sld_signaltap_body.tdo
acq_data_out[0] <= sld_signaltap_impl:sld_signaltap_body.acq_data_out[0]
acq_data_out[1] <= sld_signaltap_impl:sld_signaltap_body.acq_data_out[1]
acq_data_out[2] <= sld_signaltap_impl:sld_signaltap_body.acq_data_out[2]
acq_data_out[3] <= sld_signaltap_impl:sld_signaltap_body.acq_data_out[3]
acq_data_out[4] <= sld_signaltap_impl:sld_signaltap_body.acq_data_out[4]
acq_data_out[5] <= sld_signaltap_impl:sld_signaltap_body.acq_data_out[5]
acq_data_out[6] <= sld_signaltap_impl:sld_signaltap_body.acq_data_out[6]
acq_data_out[7] <= sld_signaltap_impl:sld_signaltap_body.acq_data_out[7]
acq_trigger_out[0] <= sld_signaltap_impl:sld_signaltap_body.acq_trigger_out[0]
trigger_out <= sld_signaltap_impl:sld_signaltap_body.trigger_out


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body
acq_clk => sld_signaltap_implb:sld_signaltap_body.acq_clk
acq_data_in[0] => sld_signaltap_implb:sld_signaltap_body.acq_data_in[0]
acq_data_in[1] => sld_signaltap_implb:sld_signaltap_body.acq_data_in[1]
acq_data_in[2] => sld_signaltap_implb:sld_signaltap_body.acq_data_in[2]
acq_data_in[3] => sld_signaltap_implb:sld_signaltap_body.acq_data_in[3]
acq_data_in[4] => sld_signaltap_implb:sld_signaltap_body.acq_data_in[4]
acq_data_in[5] => sld_signaltap_implb:sld_signaltap_body.acq_data_in[5]
acq_data_in[6] => sld_signaltap_implb:sld_signaltap_body.acq_data_in[6]
acq_data_in[7] => sld_signaltap_implb:sld_signaltap_body.acq_data_in[7]
acq_trigger_in[0] => sld_signaltap_implb:sld_signaltap_body.acq_trigger_in[0]
acq_storage_qualifier_in[0] => sld_signaltap_implb:sld_signaltap_body.acq_storage_qualifier_in[0]
trigger_in => sld_signaltap_implb:sld_signaltap_body.trigger_in
crc[0] => sld_signaltap_implb:sld_signaltap_body.crc[0]
crc[1] => sld_signaltap_implb:sld_signaltap_body.crc[1]
crc[2] => sld_signaltap_implb:sld_signaltap_body.crc[2]
crc[3] => sld_signaltap_implb:sld_signaltap_body.crc[3]
crc[4] => sld_signaltap_implb:sld_signaltap_body.crc[4]
crc[5] => sld_signaltap_implb:sld_signaltap_body.crc[5]
crc[6] => sld_signaltap_implb:sld_signaltap_body.crc[6]
crc[7] => sld_signaltap_implb:sld_signaltap_body.crc[7]
crc[8] => sld_signaltap_implb:sld_signaltap_body.crc[8]
crc[9] => sld_signaltap_implb:sld_signaltap_body.crc[9]
crc[10] => sld_signaltap_implb:sld_signaltap_body.crc[10]
crc[11] => sld_signaltap_implb:sld_signaltap_body.crc[11]
crc[12] => sld_signaltap_implb:sld_signaltap_body.crc[12]
crc[13] => sld_signaltap_implb:sld_signaltap_body.crc[13]
crc[14] => sld_signaltap_implb:sld_signaltap_body.crc[14]
crc[15] => sld_signaltap_implb:sld_signaltap_body.crc[15]
crc[16] => sld_signaltap_implb:sld_signaltap_body.crc[16]
crc[17] => sld_signaltap_implb:sld_signaltap_body.crc[17]
crc[18] => sld_signaltap_implb:sld_signaltap_body.crc[18]
crc[19] => sld_signaltap_implb:sld_signaltap_body.crc[19]
crc[20] => sld_signaltap_implb:sld_signaltap_body.crc[20]
crc[21] => sld_signaltap_implb:sld_signaltap_body.crc[21]
crc[22] => sld_signaltap_implb:sld_signaltap_body.crc[22]
crc[23] => sld_signaltap_implb:sld_signaltap_body.crc[23]
crc[24] => sld_signaltap_implb:sld_signaltap_body.crc[24]
crc[25] => sld_signaltap_implb:sld_signaltap_body.crc[25]
crc[26] => sld_signaltap_implb:sld_signaltap_body.crc[26]
crc[27] => sld_signaltap_implb:sld_signaltap_body.crc[27]
crc[28] => sld_signaltap_implb:sld_signaltap_body.crc[28]
crc[29] => sld_signaltap_implb:sld_signaltap_body.crc[29]
crc[30] => sld_signaltap_implb:sld_signaltap_body.crc[30]
crc[31] => sld_signaltap_implb:sld_signaltap_body.crc[31]
storage_enable => sld_signaltap_implb:sld_signaltap_body.storage_enable
raw_tck => sld_signaltap_implb:sld_signaltap_body.raw_tck
tdi => sld_signaltap_implb:sld_signaltap_body.tdi
usr1 => sld_signaltap_implb:sld_signaltap_body.usr1
rti => sld_signaltap_implb:sld_signaltap_body.rti
shift => sld_signaltap_implb:sld_signaltap_body.shift
update => sld_signaltap_implb:sld_signaltap_body.update
jtag_state_cdr => sld_signaltap_implb:sld_signaltap_body.jtag_state_cdr
jtag_state_sdr => sld_signaltap_implb:sld_signaltap_body.jtag_state_sdr
jtag_state_e1dr => sld_signaltap_implb:sld_signaltap_body.jtag_state_e1dr
jtag_state_udr => sld_signaltap_implb:sld_signaltap_body.jtag_state_udr
jtag_state_uir => sld_signaltap_implb:sld_signaltap_body.jtag_state_uir
clr => sld_signaltap_implb:sld_signaltap_body.clr
ena => sld_signaltap_implb:sld_signaltap_body.ena
ir_in[0] => sld_signaltap_implb:sld_signaltap_body.ir_in[0]
ir_in[1] => sld_signaltap_implb:sld_signaltap_body.ir_in[1]
ir_in[2] => sld_signaltap_implb:sld_signaltap_body.ir_in[2]
ir_in[3] => sld_signaltap_implb:sld_signaltap_body.ir_in[3]
ir_in[4] => sld_signaltap_implb:sld_signaltap_body.ir_in[4]
ir_in[5] => sld_signaltap_implb:sld_signaltap_body.ir_in[5]
ir_in[6] => sld_signaltap_implb:sld_signaltap_body.ir_in[6]
ir_in[7] => sld_signaltap_implb:sld_signaltap_body.ir_in[7]
ir_out[0] <= sld_signaltap_implb:sld_signaltap_body.ir_out[0]
ir_out[1] <= sld_signaltap_implb:sld_signaltap_body.ir_out[1]
ir_out[2] <= sld_signaltap_implb:sld_signaltap_body.ir_out[2]
ir_out[3] <= sld_signaltap_implb:sld_signaltap_body.ir_out[3]
ir_out[4] <= sld_signaltap_implb:sld_signaltap_body.ir_out[4]
ir_out[5] <= sld_signaltap_implb:sld_signaltap_body.ir_out[5]
ir_out[6] <= sld_signaltap_implb:sld_signaltap_body.ir_out[6]
ir_out[7] <= sld_signaltap_implb:sld_signaltap_body.ir_out[7]
tdo <= sld_signaltap_implb:sld_signaltap_body.tdo
acq_data_out[0] <= sld_signaltap_implb:sld_signaltap_body.acq_data_out[0]
acq_data_out[1] <= sld_signaltap_implb:sld_signaltap_body.acq_data_out[1]
acq_data_out[2] <= sld_signaltap_implb:sld_signaltap_body.acq_data_out[2]
acq_data_out[3] <= sld_signaltap_implb:sld_signaltap_body.acq_data_out[3]
acq_data_out[4] <= sld_signaltap_implb:sld_signaltap_body.acq_data_out[4]
acq_data_out[5] <= sld_signaltap_implb:sld_signaltap_body.acq_data_out[5]
acq_data_out[6] <= sld_signaltap_implb:sld_signaltap_body.acq_data_out[6]
acq_data_out[7] <= sld_signaltap_implb:sld_signaltap_body.acq_data_out[7]
acq_trigger_out[0] <= sld_signaltap_implb:sld_signaltap_body.acq_trigger_out[0]
trigger_out <= sld_signaltap_implb:sld_signaltap_body.trigger_out


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body
acq_clk => sld_ela_control:ela_control.acq_clk
acq_clk => acq_data_in_pipe_reg[0][0].CLK
acq_clk => acq_data_in_pipe_reg[0][1].CLK
acq_clk => acq_data_in_pipe_reg[0][2].CLK
acq_clk => acq_data_in_pipe_reg[0][3].CLK
acq_clk => acq_data_in_pipe_reg[0][4].CLK
acq_clk => acq_data_in_pipe_reg[0][5].CLK
acq_clk => acq_data_in_pipe_reg[0][6].CLK
acq_clk => acq_data_in_pipe_reg[0][7].CLK
acq_clk => acq_data_in_pipe_reg[1][0].CLK
acq_clk => acq_data_in_pipe_reg[1][1].CLK
acq_clk => acq_data_in_pipe_reg[1][2].CLK
acq_clk => acq_data_in_pipe_reg[1][3].CLK
acq_clk => acq_data_in_pipe_reg[1][4].CLK
acq_clk => acq_data_in_pipe_reg[1][5].CLK
acq_clk => acq_data_in_pipe_reg[1][6].CLK
acq_clk => acq_data_in_pipe_reg[1][7].CLK
acq_clk => acq_data_in_pipe_reg[2][0].CLK
acq_clk => acq_data_in_pipe_reg[2][1].CLK
acq_clk => acq_data_in_pipe_reg[2][2].CLK
acq_clk => acq_data_in_pipe_reg[2][3].CLK
acq_clk => acq_data_in_pipe_reg[2][4].CLK
acq_clk => acq_data_in_pipe_reg[2][5].CLK
acq_clk => acq_data_in_pipe_reg[2][6].CLK
acq_clk => acq_data_in_pipe_reg[2][7].CLK
acq_clk => acq_data_in_pipe_reg[3][0].CLK
acq_clk => acq_data_in_pipe_reg[3][1].CLK
acq_clk => acq_data_in_pipe_reg[3][2].CLK
acq_clk => acq_data_in_pipe_reg[3][3].CLK
acq_clk => acq_data_in_pipe_reg[3][4].CLK
acq_clk => acq_data_in_pipe_reg[3][5].CLK
acq_clk => acq_data_in_pipe_reg[3][6].CLK
acq_clk => acq_data_in_pipe_reg[3][7].CLK
acq_clk => trigger_out_ff.CLK
acq_clk => trigger_out_mode_ff.CLK
acq_clk => buffer_write_address_delayed[0].CLK
acq_clk => buffer_write_address_delayed[1].CLK
acq_clk => buffer_write_address_delayed[2].CLK
acq_clk => buffer_write_address_delayed[3].CLK
acq_clk => buffer_write_address_delayed[4].CLK
acq_clk => buffer_write_address_delayed[5].CLK
acq_clk => buffer_write_address_delayed[6].CLK
acq_clk => buffer_write_address_delayed[7].CLK
acq_clk => buffer_write_address_delayed[8].CLK
acq_clk => buffer_write_enable_delayed.CLK
acq_clk => segment_shift_clk_ena.CLK
acq_clk => current_segment_delayed[0].CLK
acq_clk => segment_wrapped_delayed.CLK
acq_clk => last_trigger_address_delayed[0].CLK
acq_clk => last_trigger_address_delayed[1].CLK
acq_clk => last_trigger_address_delayed[2].CLK
acq_clk => last_trigger_address_delayed[3].CLK
acq_clk => last_trigger_address_delayed[4].CLK
acq_clk => last_trigger_address_delayed[5].CLK
acq_clk => last_trigger_address_delayed[6].CLK
acq_clk => last_trigger_address_delayed[7].CLK
acq_clk => last_trigger_address_delayed[8].CLK
acq_clk => current_offset_delayed[0].CLK
acq_clk => current_offset_delayed[1].CLK
acq_clk => current_offset_delayed[2].CLK
acq_clk => current_offset_delayed[3].CLK
acq_clk => current_offset_delayed[4].CLK
acq_clk => current_offset_delayed[5].CLK
acq_clk => current_offset_delayed[6].CLK
acq_clk => current_offset_delayed[7].CLK
acq_clk => current_offset_delayed[8].CLK
acq_clk => condition_delay_reg[0].CLK
acq_clk => condition_delay_reg[1].CLK
acq_clk => condition_delay_reg[2].CLK
acq_clk => condition_delay_reg[3].CLK
acq_clk => run.CLK
acq_clk => sld_buffer_manager:sld_buffer_manager_inst.clk
acq_clk => altsyncram:stp_non_zero_ram_gen:stp_buffer_ram.clock0
acq_clk => altdpram:stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem.inclock
acq_data_in[0] => acq_data_in_pipe_reg[0][0].DATAIN
acq_data_in[0] => acq_data_out[0].DATAIN
acq_data_in[1] => acq_data_in_pipe_reg[0][1].DATAIN
acq_data_in[1] => acq_data_out[1].DATAIN
acq_data_in[2] => acq_data_in_pipe_reg[0][2].DATAIN
acq_data_in[2] => acq_data_out[2].DATAIN
acq_data_in[3] => acq_data_in_pipe_reg[0][3].DATAIN
acq_data_in[3] => acq_data_out[3].DATAIN
acq_data_in[4] => acq_data_in_pipe_reg[0][4].DATAIN
acq_data_in[4] => acq_data_out[4].DATAIN
acq_data_in[5] => acq_data_in_pipe_reg[0][5].DATAIN
acq_data_in[5] => acq_data_out[5].DATAIN
acq_data_in[6] => acq_data_in_pipe_reg[0][6].DATAIN
acq_data_in[6] => acq_data_out[6].DATAIN
acq_data_in[7] => acq_data_in_pipe_reg[0][7].DATAIN
acq_data_in[7] => acq_data_out[7].DATAIN
acq_trigger_in[0] => sld_ela_control:ela_control.acq_trigger_in[0]
acq_trigger_in[0] => acq_trigger_out[0].DATAIN
acq_storage_qualifier_in[0] => sld_ela_control:ela_control.storage_qualifier_in[0]
trigger_in => sld_ela_control:ela_control.single_trigger_in
crc[0] => ~NO_FANOUT~
crc[1] => ~NO_FANOUT~
crc[2] => ~NO_FANOUT~
crc[3] => ~NO_FANOUT~
crc[4] => ~NO_FANOUT~
crc[5] => ~NO_FANOUT~
crc[6] => ~NO_FANOUT~
crc[7] => ~NO_FANOUT~
crc[8] => ~NO_FANOUT~
crc[9] => ~NO_FANOUT~
crc[10] => ~NO_FANOUT~
crc[11] => ~NO_FANOUT~
crc[12] => ~NO_FANOUT~
crc[13] => ~NO_FANOUT~
crc[14] => ~NO_FANOUT~
crc[15] => ~NO_FANOUT~
crc[16] => ~NO_FANOUT~
crc[17] => ~NO_FANOUT~
crc[18] => ~NO_FANOUT~
crc[19] => ~NO_FANOUT~
crc[20] => ~NO_FANOUT~
crc[21] => ~NO_FANOUT~
crc[22] => ~NO_FANOUT~
crc[23] => ~NO_FANOUT~
crc[24] => ~NO_FANOUT~
crc[25] => ~NO_FANOUT~
crc[26] => ~NO_FANOUT~
crc[27] => ~NO_FANOUT~
crc[28] => ~NO_FANOUT~
crc[29] => ~NO_FANOUT~
crc[30] => ~NO_FANOUT~
crc[31] => ~NO_FANOUT~
storage_enable => sld_ela_control:ela_control.storage_qualifier_port_in
raw_tck => bypass_reg_out.CLK
raw_tck => reset_all.CLK
raw_tck => sld_ela_control:ela_control.tck
raw_tck => LPM_SHIFTREG:segment_offset_config_deserialize.CLOCK
raw_tck => altsyncram:stp_non_zero_ram_gen:stp_buffer_ram.clock1
raw_tck => altdpram:stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem.outclock
raw_tck => sld_offload_buffer_mgr:stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst.tck
raw_tck => sld_rom_sr:crc_rom_sr.TCK
raw_tck => LPM_SHIFTREG:status_register.CLOCK
tdi => sld_ela_control:ela_control.tdi
tdi => sld_rom_sr:crc_rom_sr.TDI
tdi => LPM_SHIFTREG:status_register.SHIFTIN
tdi => bypass_reg_out.DATAIN
usr1 => sld_rom_sr:crc_rom_sr.USR1
usr1 => crc_rom_sr_ena.IN0
usr1 => dr_scan.IN0
rti => ~NO_FANOUT~
shift => ~NO_FANOUT~
update => ~NO_FANOUT~
jtag_state_cdr => crc_rom_sr_ena.IN0
jtag_state_cdr => cdr.IN1
jtag_state_sdr => crc_rom_sr_ena.IN1
jtag_state_sdr => sdr.IN1
jtag_state_sdr => sld_rom_sr:crc_rom_sr.SHIFT
jtag_state_e1dr => ~NO_FANOUT~
jtag_state_udr => sld_rom_sr:crc_rom_sr.UPDATE
jtag_state_uir => ~NO_FANOUT~
clr => reset_all.IN1
ena => crc_rom_sr_ena.IN1
ena => dr_scan.IN1
ena => bypass_reg_out.ENA
ir_in[0] => reset_instr_on.IN1
ir_in[0] => ir_out[0].DATAIN
ir_in[1] => process_3.IN1
ir_in[1] => status_load_on.IN0
ir_in[1] => sld_ela_control:ela_control.run_instr_on
ir_in[1] => sld_offload_buffer_mgr:stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst.run_instr_on
ir_in[1] => ir_out[1].DATAIN
ir_in[2] => save_segment_data.IN1
ir_in[2] => sld_ela_control:ela_control.stop_instr_on
ir_in[2] => ir_out[2].DATAIN
ir_in[3] => trigger_setup_ena.IN1
ir_in[3] => tdo.OUTPUTSELECT
ir_in[3] => sld_ela_control:ela_control.load_instr_on
ir_in[3] => ir_out[3].DATAIN
ir_in[4] => process_7.IN0
ir_in[4] => altsyncram:stp_non_zero_ram_gen:stp_buffer_ram.clocken1
ir_in[4] => sld_offload_buffer_mgr:stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst.offload_instr_on
ir_in[4] => ir_out[4].DATAIN
ir_in[5] => tdo.OUTPUTSELECT
ir_in[5] => ir_out[5].DATAIN
ir_in[6] => status_load_on.IN1
ir_in[6] => sld_ela_control:ela_control.status_instr_on
ir_in[6] => ir_out[6].DATAIN
ir_in[7] => process_7.IN1
ir_in[7] => altdpram:stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem.outclocken
ir_in[7] => sld_offload_buffer_mgr:stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst.offload_ex_instr_on
ir_in[7] => ir_out[7].DATAIN
ir_out[0] <= ir_in[0].DB_MAX_OUTPUT_PORT_TYPE
ir_out[1] <= ir_in[1].DB_MAX_OUTPUT_PORT_TYPE
ir_out[2] <= ir_in[2].DB_MAX_OUTPUT_PORT_TYPE
ir_out[3] <= ir_in[3].DB_MAX_OUTPUT_PORT_TYPE
ir_out[4] <= ir_in[4].DB_MAX_OUTPUT_PORT_TYPE
ir_out[5] <= ir_in[5].DB_MAX_OUTPUT_PORT_TYPE
ir_out[6] <= ir_in[6].DB_MAX_OUTPUT_PORT_TYPE
ir_out[7] <= ir_in[7].DB_MAX_OUTPUT_PORT_TYPE
tdo <= tdo.DB_MAX_OUTPUT_PORT_TYPE
acq_data_out[0] <= acq_data_in[0].DB_MAX_OUTPUT_PORT_TYPE
acq_data_out[1] <= acq_data_in[1].DB_MAX_OUTPUT_PORT_TYPE
acq_data_out[2] <= acq_data_in[2].DB_MAX_OUTPUT_PORT_TYPE
acq_data_out[3] <= acq_data_in[3].DB_MAX_OUTPUT_PORT_TYPE
acq_data_out[4] <= acq_data_in[4].DB_MAX_OUTPUT_PORT_TYPE
acq_data_out[5] <= acq_data_in[5].DB_MAX_OUTPUT_PORT_TYPE
acq_data_out[6] <= acq_data_in[6].DB_MAX_OUTPUT_PORT_TYPE
acq_data_out[7] <= acq_data_in[7].DB_MAX_OUTPUT_PORT_TYPE
acq_trigger_out[0] <= acq_trigger_in[0].DB_MAX_OUTPUT_PORT_TYPE
trigger_out <= trigger_out_ff.DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control
tck => LPM_SHIFTREG:trigger_config_deserialize.CLOCK
tck => sld_ela_basic_multi_level_trigger:basic_multi_level_mbpm_trigger_gen:multi_level_mbpm.tck
tck => sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.config_clk
tdi => sld_ela_basic_multi_level_trigger:basic_multi_level_mbpm_trigger_gen:multi_level_mbpm.setup_bit_in
sdr => trigger_setup_ena.IN0
reset_all => LPM_SHIFTREG:trigger_config_deserialize.ACLR
reset_all => run.ACLR
reset_all => sld_ela_basic_multi_level_trigger:basic_multi_level_mbpm_trigger_gen:multi_level_mbpm.reset_all
reset_all => sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.reset
load_instr_on => trigger_setup_ena.IN1
run_instr_on => run.IN0
pwr_up_run_instr_on => run.IN1
status_instr_on => ~NO_FANOUT~
stop_instr_on => ~NO_FANOUT~
acq_clk => sld_ela_basic_multi_level_trigger:basic_multi_level_mbpm_trigger_gen:multi_level_mbpm.acq_clk
acq_clk => run.CLK
acq_clk => sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.acq_clk
acq_trigger_in[0] => sld_ela_basic_multi_level_trigger:basic_multi_level_mbpm_trigger_gen:multi_level_mbpm.data_in[0]
single_trigger_in => ~NO_FANOUT~
storage_qualifier_port_in => ~NO_FANOUT~
storage_qualifier_in[0] => ~NO_FANOUT~
valid_data_ready => run.IN1
trigger_out_hps => ~NO_FANOUT~
trigger_setup_bit_out <= LPM_SHIFTREG:trigger_config_deserialize.SHIFTOUT
segment_trigger <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.segment_trigger
final_trigger <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.final_trigger
use_post_fill_count <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.use_post_fill_count
post_fill_count[0] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.post_fill_count[0]
post_fill_count[1] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.post_fill_count[1]
post_fill_count[2] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.post_fill_count[2]
post_fill_count[3] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.post_fill_count[3]
post_fill_count[4] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.post_fill_count[4]
post_fill_count[5] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.post_fill_count[5]
post_fill_count[6] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.post_fill_count[6]
post_fill_count[7] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.post_fill_count[7]
post_fill_count[8] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.post_fill_count[8]
current_state[0] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.current_state[0]
current_state[1] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.current_state[1]
current_state[2] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.current_state[2]
current_state[3] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.current_state[3]
current_state[4] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.current_state[4]
current_state[5] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.current_state[5]
current_state[6] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.current_state[6]
current_state[7] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.current_state[7]
current_state[8] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.current_state[8]
current_state[9] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.current_state[9]
current_state[10] <= sld_ela_trigger_flow_mgr:builtin:ela_trigger_flow_mgr_entity.current_state[10]
trigger_out_mode[0] <= LPM_SHIFTREG:trigger_config_deserialize.Q[0]
current_resource_value[0] <= <GND>
buffer_enable_out <= <VCC>


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|LPM_SHIFTREG:trigger_config_deserialize
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => dffs[3].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm
tck => LPM_SHIFTREG:trigger_condition_deserialize.CLOCK
setup_ena => LPM_SHIFTREG:trigger_condition_deserialize.ENABLE
setup_bit_in => LPM_SHIFTREG:trigger_condition_deserialize.SHIFTIN
reset_all => LPM_SHIFTREG:trigger_condition_deserialize.ACLR
acq_clk => sld_mbpmg:trigger_modules_gen:0:trigger_match.acq_clk
data_in[0] => sld_mbpmg:trigger_modules_gen:0:trigger_match.data_in[0]
setup_bit_out <= LPM_SHIFTREG:trigger_condition_deserialize.SHIFTOUT
trigger_level_match_out[0] <= sld_mbpmg:trigger_modules_gen:0:trigger_match.match_out


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|LPM_SHIFTREG:trigger_condition_deserialize
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => dffs[2].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match
acq_clk => sld_sbpmg:gen_sbpmg_pipeline_less_than_two:sm0:0:sm1.acq_clk
data_in[0] => sld_sbpmg:gen_sbpmg_pipeline_less_than_two:sm0:0:sm1.data_in
pattern_in[0] => sld_sbpmg:gen_sbpmg_pipeline_less_than_two:sm0:0:sm1.lfl
pattern_in[1] => sld_sbpmg:gen_sbpmg_pipeline_less_than_two:sm0:0:sm1.lfh
pattern_in[2] => sld_sbpmg:gen_sbpmg_pipeline_less_than_two:sm0:0:sm1.lfe
match_out <= sld_sbpmg:gen_sbpmg_pipeline_less_than_two:sm0:0:sm1.match_out


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1
acq_clk => regoutff.CLK
acq_clk => holdff.CLK
data_in => p_match_out.IN1
data_in => p_match_out.IN1
data_in => p_match_out.IN1
data_in => holdff.DATAIN
data_in => p_match_out.IN1
data_in => p_match_out.IN1
lfg => p_match_out.IN0
lfg => p_match_out.IN0
lfe => p_match_out.IN1
lfe => p_match_out.IN1
lfh => p_match_out.IN1
lfh => p_match_out.IN1
lfh => p_match_out.IN1
lfl => p_match_out.IN1
lfl => p_match_out.IN1
lfl => p_match_out.IN1
match_out <= regoutff.DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity
acq_clk => last_level_delayed.CLK
start_acq => last_level_delayed.ENA
reset => LPM_SHIFTREG:trigger_config_deserialize.ACLR
reset => last_level_delayed.ACLR
condition_met[0] => last_level_delayed.DATAIN
config_in => LPM_SHIFTREG:trigger_config_deserialize.SHIFTIN
config_enable => LPM_SHIFTREG:trigger_config_deserialize.ENABLE
config_clk => LPM_SHIFTREG:trigger_config_deserialize.CLOCK
use_post_fill_count <= <GND>
post_fill_count[0] <= <VCC>
post_fill_count[1] <= <GND>
post_fill_count[2] <= <GND>
post_fill_count[3] <= <GND>
post_fill_count[4] <= <GND>
post_fill_count[5] <= <GND>
post_fill_count[6] <= <GND>
post_fill_count[7] <= <GND>
post_fill_count[8] <= <GND>
current_state[0] <= <GND>
current_state[1] <= <GND>
current_state[2] <= <GND>
current_state[3] <= <GND>
current_state[4] <= <GND>
current_state[5] <= <GND>
current_state[6] <= <GND>
current_state[7] <= <GND>
current_state[8] <= <GND>
current_state[9] <= <GND>
current_state[10] <= <GND>
segment_trigger <= cascade_drop.DB_MAX_OUTPUT_PORT_TYPE
final_trigger <= <GND>
config_out <= LPM_SHIFTREG:trigger_config_deserialize.SHIFTOUT


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|LPM_SHIFTREG:trigger_config_deserialize
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
clock => dffs[9].CLK
clock => dffs[8].CLK
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[9].ENA
enable => dffs[8].ENA
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => dffs[9].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffs[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffs[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= dffs[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= dffs[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= dffs[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= dffs[9].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst
clk => modified_post_count[0].CLK
clk => modified_post_count[1].CLK
clk => modified_post_count[2].CLK
clk => modified_post_count[3].CLK
clk => modified_post_count[4].CLK
clk => modified_post_count[5].CLK
clk => modified_post_count[6].CLK
clk => modified_post_count[7].CLK
clk => modified_post_count[8].CLK
clk => modified_post_count[9].CLK
clk => last_buffer_write_address_sig[0].CLK
clk => last_buffer_write_address_sig[1].CLK
clk => last_buffer_write_address_sig[2].CLK
clk => last_buffer_write_address_sig[3].CLK
clk => last_buffer_write_address_sig[4].CLK
clk => last_buffer_write_address_sig[5].CLK
clk => last_buffer_write_address_sig[6].CLK
clk => last_buffer_write_address_sig[7].CLK
clk => last_buffer_write_address_sig[8].CLK
clk => is_buffer_wrapped_once_sig.CLK
clk => final_trigger_set.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => \buffer_manager:collecting_post_data_var.CLK
clk => \buffer_manager:segment_shift_var.CLK
clk => \buffer_manager:done.CLK
clk => \buffer_manager:is_buffer_wrapped.CLK
clk => \buffer_manager:last_trigger_address_var[0].CLK
clk => \buffer_manager:last_trigger_address_var[1].CLK
clk => \buffer_manager:last_trigger_address_var[2].CLK
clk => \buffer_manager:last_trigger_address_var[3].CLK
clk => \buffer_manager:last_trigger_address_var[4].CLK
clk => \buffer_manager:last_trigger_address_var[5].CLK
clk => \buffer_manager:last_trigger_address_var[6].CLK
clk => \buffer_manager:last_trigger_address_var[7].CLK
clk => \buffer_manager:last_trigger_address_var[8].CLK
clk => \buffer_manager:next_address[0].CLK
clk => \buffer_manager:next_address[1].CLK
clk => \buffer_manager:next_address[2].CLK
clk => \buffer_manager:next_address[3].CLK
clk => \buffer_manager:next_address[4].CLK
clk => \buffer_manager:next_address[5].CLK
clk => \buffer_manager:next_address[6].CLK
clk => \buffer_manager:next_address[7].CLK
clk => \buffer_manager:next_address[8].CLK
clk => \buffer_manager:offset_count[0].CLK
clk => \buffer_manager:offset_count[1].CLK
clk => \buffer_manager:offset_count[2].CLK
clk => \buffer_manager:offset_count[3].CLK
clk => \buffer_manager:offset_count[4].CLK
clk => \buffer_manager:offset_count[5].CLK
clk => \buffer_manager:offset_count[6].CLK
clk => \buffer_manager:offset_count[7].CLK
clk => \buffer_manager:offset_count[8].CLK
clk => \buffer_manager:base_address[0].CLK
clk_ena => ~NO_FANOUT~
run => modified_post_count[5].ENA
run => modified_post_count[4].ENA
run => modified_post_count[3].ENA
run => modified_post_count[2].ENA
run => modified_post_count[1].ENA
run => modified_post_count[0].ENA
run => modified_post_count[6].ENA
run => modified_post_count[7].ENA
run => modified_post_count[8].ENA
run => modified_post_count[9].ENA
run => last_buffer_write_address_sig[0].ENA
run => last_buffer_write_address_sig[1].ENA
run => last_buffer_write_address_sig[2].ENA
run => last_buffer_write_address_sig[3].ENA
run => last_buffer_write_address_sig[4].ENA
run => last_buffer_write_address_sig[5].ENA
run => last_buffer_write_address_sig[6].ENA
run => last_buffer_write_address_sig[7].ENA
run => last_buffer_write_address_sig[8].ENA
run => is_buffer_wrapped_once_sig.ENA
run => final_trigger_set.ENA
run => counter[0].ENA
run => counter[1].ENA
run => counter[2].ENA
run => counter[3].ENA
run => counter[4].ENA
run => counter[5].ENA
run => counter[6].ENA
run => counter[7].ENA
run => counter[8].ENA
run => counter[9].ENA
run => \buffer_manager:collecting_post_data_var.ENA
run => \buffer_manager:segment_shift_var.ENA
run => \buffer_manager:done.ENA
run => \buffer_manager:is_buffer_wrapped.ENA
run => \buffer_manager:last_trigger_address_var[0].ENA
run => \buffer_manager:last_trigger_address_var[1].ENA
run => \buffer_manager:last_trigger_address_var[2].ENA
run => \buffer_manager:last_trigger_address_var[3].ENA
run => \buffer_manager:last_trigger_address_var[4].ENA
run => \buffer_manager:last_trigger_address_var[5].ENA
run => \buffer_manager:last_trigger_address_var[6].ENA
run => \buffer_manager:last_trigger_address_var[7].ENA
run => \buffer_manager:last_trigger_address_var[8].ENA
run => \buffer_manager:next_address[0].ENA
run => \buffer_manager:next_address[1].ENA
run => \buffer_manager:next_address[2].ENA
run => \buffer_manager:next_address[3].ENA
run => \buffer_manager:next_address[4].ENA
run => \buffer_manager:next_address[5].ENA
run => \buffer_manager:next_address[6].ENA
run => \buffer_manager:next_address[7].ENA
run => \buffer_manager:next_address[8].ENA
run => \buffer_manager:offset_count[0].ENA
run => \buffer_manager:offset_count[1].ENA
run => \buffer_manager:offset_count[2].ENA
run => \buffer_manager:offset_count[3].ENA
run => \buffer_manager:offset_count[4].ENA
run => \buffer_manager:offset_count[5].ENA
run => \buffer_manager:offset_count[6].ENA
run => \buffer_manager:offset_count[7].ENA
run => \buffer_manager:offset_count[8].ENA
run => \buffer_manager:base_address[0].ENA
reset => modified_post_count[0].PRESET
reset => modified_post_count[1].PRESET
reset => modified_post_count[2].PRESET
reset => modified_post_count[3].PRESET
reset => modified_post_count[4].PRESET
reset => modified_post_count[5].PRESET
reset => modified_post_count[6].PRESET
reset => modified_post_count[7].PRESET
reset => modified_post_count[8].PRESET
reset => modified_post_count[9].PRESET
reset => last_buffer_write_address_sig[0].ACLR
reset => last_buffer_write_address_sig[1].ACLR
reset => last_buffer_write_address_sig[2].ACLR
reset => last_buffer_write_address_sig[3].ACLR
reset => last_buffer_write_address_sig[4].ACLR
reset => last_buffer_write_address_sig[5].ACLR
reset => last_buffer_write_address_sig[6].ACLR
reset => last_buffer_write_address_sig[7].ACLR
reset => last_buffer_write_address_sig[8].ACLR
reset => is_buffer_wrapped_once_sig.ACLR
reset => final_trigger_set.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => \buffer_manager:collecting_post_data_var.ACLR
reset => \buffer_manager:segment_shift_var.ACLR
reset => \buffer_manager:done.ACLR
reset => \buffer_manager:is_buffer_wrapped.ACLR
reset => \buffer_manager:last_trigger_address_var[0].ACLR
reset => \buffer_manager:last_trigger_address_var[1].ACLR
reset => \buffer_manager:last_trigger_address_var[2].ACLR
reset => \buffer_manager:last_trigger_address_var[3].ACLR
reset => \buffer_manager:last_trigger_address_var[4].ACLR
reset => \buffer_manager:last_trigger_address_var[5].ACLR
reset => \buffer_manager:last_trigger_address_var[6].ACLR
reset => \buffer_manager:last_trigger_address_var[7].ACLR
reset => \buffer_manager:last_trigger_address_var[8].ACLR
reset => \buffer_manager:next_address[0].ACLR
reset => \buffer_manager:next_address[1].ACLR
reset => \buffer_manager:next_address[2].ACLR
reset => \buffer_manager:next_address[3].ACLR
reset => \buffer_manager:next_address[4].ACLR
reset => \buffer_manager:next_address[5].ACLR
reset => \buffer_manager:next_address[6].ACLR
reset => \buffer_manager:next_address[7].ACLR
reset => \buffer_manager:next_address[8].ACLR
reset => \buffer_manager:offset_count[0].ACLR
reset => \buffer_manager:offset_count[1].ACLR
reset => \buffer_manager:offset_count[2].ACLR
reset => \buffer_manager:offset_count[3].ACLR
reset => \buffer_manager:offset_count[4].ACLR
reset => \buffer_manager:offset_count[5].ACLR
reset => \buffer_manager:offset_count[6].ACLR
reset => \buffer_manager:offset_count[7].ACLR
reset => \buffer_manager:offset_count[8].ACLR
reset => \buffer_manager:base_address[0].ACLR
final_trigger => process_0.IN0
final_trigger => process_0.IN1
segment_trigger => process_0.IN1
address[0] <= \buffer_manager:next_address[0].DB_MAX_OUTPUT_PORT_TYPE
address[1] <= \buffer_manager:next_address[1].DB_MAX_OUTPUT_PORT_TYPE
address[2] <= \buffer_manager:next_address[2].DB_MAX_OUTPUT_PORT_TYPE
address[3] <= \buffer_manager:next_address[3].DB_MAX_OUTPUT_PORT_TYPE
address[4] <= \buffer_manager:next_address[4].DB_MAX_OUTPUT_PORT_TYPE
address[5] <= \buffer_manager:next_address[5].DB_MAX_OUTPUT_PORT_TYPE
address[6] <= \buffer_manager:next_address[6].DB_MAX_OUTPUT_PORT_TYPE
address[7] <= \buffer_manager:next_address[7].DB_MAX_OUTPUT_PORT_TYPE
address[8] <= \buffer_manager:next_address[8].DB_MAX_OUTPUT_PORT_TYPE
write_enable <= \buffer_manager:done.DB_MAX_OUTPUT_PORT_TYPE
post_count[0] => Add0.IN18
post_count[1] => Add0.IN17
post_count[2] => Add0.IN16
post_count[3] => Add0.IN15
post_count[4] => Add0.IN14
post_count[5] => Add0.IN13
post_count[6] => Add0.IN12
post_count[7] => Add0.IN11
post_count[8] => Add0.IN10
require_wrap => next_segment.OUTPUTSELECT
require_wrap => modified_post_count.OUTPUTSELECT
require_wrap => modified_post_count.OUTPUTSELECT
require_wrap => modified_post_count.OUTPUTSELECT
require_wrap => modified_post_count.OUTPUTSELECT
require_wrap => modified_post_count.OUTPUTSELECT
require_wrap => modified_post_count.OUTPUTSELECT
require_wrap => modified_post_count.OUTPUTSELECT
require_wrap => modified_post_count.OUTPUTSELECT
require_wrap => modified_post_count.OUTPUTSELECT
require_wrap => modified_post_count.OUTPUTSELECT
require_wrap => process_0.IN1
require_wrap => process_0.IN1
buffer_stop_full => final_trigger_set.OUTPUTSELECT
current_segment[0] <= \buffer_manager:base_address[0].DB_MAX_OUTPUT_PORT_TYPE
current_offset[0] <= \buffer_manager:offset_count[0].DB_MAX_OUTPUT_PORT_TYPE
current_offset[1] <= \buffer_manager:offset_count[1].DB_MAX_OUTPUT_PORT_TYPE
current_offset[2] <= \buffer_manager:offset_count[2].DB_MAX_OUTPUT_PORT_TYPE
current_offset[3] <= \buffer_manager:offset_count[3].DB_MAX_OUTPUT_PORT_TYPE
current_offset[4] <= \buffer_manager:offset_count[4].DB_MAX_OUTPUT_PORT_TYPE
current_offset[5] <= \buffer_manager:offset_count[5].DB_MAX_OUTPUT_PORT_TYPE
current_offset[6] <= \buffer_manager:offset_count[6].DB_MAX_OUTPUT_PORT_TYPE
current_offset[7] <= \buffer_manager:offset_count[7].DB_MAX_OUTPUT_PORT_TYPE
current_offset[8] <= \buffer_manager:offset_count[8].DB_MAX_OUTPUT_PORT_TYPE
last_trigger_address[0] <= \buffer_manager:last_trigger_address_var[0].DB_MAX_OUTPUT_PORT_TYPE
last_trigger_address[1] <= \buffer_manager:last_trigger_address_var[1].DB_MAX_OUTPUT_PORT_TYPE
last_trigger_address[2] <= \buffer_manager:last_trigger_address_var[2].DB_MAX_OUTPUT_PORT_TYPE
last_trigger_address[3] <= \buffer_manager:last_trigger_address_var[3].DB_MAX_OUTPUT_PORT_TYPE
last_trigger_address[4] <= \buffer_manager:last_trigger_address_var[4].DB_MAX_OUTPUT_PORT_TYPE
last_trigger_address[5] <= \buffer_manager:last_trigger_address_var[5].DB_MAX_OUTPUT_PORT_TYPE
last_trigger_address[6] <= \buffer_manager:last_trigger_address_var[6].DB_MAX_OUTPUT_PORT_TYPE
last_trigger_address[7] <= \buffer_manager:last_trigger_address_var[7].DB_MAX_OUTPUT_PORT_TYPE
last_trigger_address[8] <= \buffer_manager:last_trigger_address_var[8].DB_MAX_OUTPUT_PORT_TYPE
segment_wrapped <= \buffer_manager:is_buffer_wrapped.DB_MAX_OUTPUT_PORT_TYPE
segment_shift <= \buffer_manager:segment_shift_var.DB_MAX_OUTPUT_PORT_TYPE
collecting_post_data <= \buffer_manager:collecting_post_data_var.DB_MAX_OUTPUT_PORT_TYPE
last_buffer_write_address[0] <= last_buffer_write_address_sig[0].DB_MAX_OUTPUT_PORT_TYPE
last_buffer_write_address[1] <= last_buffer_write_address_sig[1].DB_MAX_OUTPUT_PORT_TYPE
last_buffer_write_address[2] <= last_buffer_write_address_sig[2].DB_MAX_OUTPUT_PORT_TYPE
last_buffer_write_address[3] <= last_buffer_write_address_sig[3].DB_MAX_OUTPUT_PORT_TYPE
last_buffer_write_address[4] <= last_buffer_write_address_sig[4].DB_MAX_OUTPUT_PORT_TYPE
last_buffer_write_address[5] <= last_buffer_write_address_sig[5].DB_MAX_OUTPUT_PORT_TYPE
last_buffer_write_address[6] <= last_buffer_write_address_sig[6].DB_MAX_OUTPUT_PORT_TYPE
last_buffer_write_address[7] <= last_buffer_write_address_sig[7].DB_MAX_OUTPUT_PORT_TYPE
last_buffer_write_address[8] <= last_buffer_write_address_sig[8].DB_MAX_OUTPUT_PORT_TYPE
trigger_write_address[0] <= \buffer_manager:last_trigger_address_var[0].DB_MAX_OUTPUT_PORT_TYPE
trigger_write_address[1] <= \buffer_manager:last_trigger_address_var[1].DB_MAX_OUTPUT_PORT_TYPE
trigger_write_address[2] <= \buffer_manager:last_trigger_address_var[2].DB_MAX_OUTPUT_PORT_TYPE
trigger_write_address[3] <= \buffer_manager:last_trigger_address_var[3].DB_MAX_OUTPUT_PORT_TYPE
trigger_write_address[4] <= \buffer_manager:last_trigger_address_var[4].DB_MAX_OUTPUT_PORT_TYPE
trigger_write_address[5] <= \buffer_manager:last_trigger_address_var[5].DB_MAX_OUTPUT_PORT_TYPE
trigger_write_address[6] <= \buffer_manager:last_trigger_address_var[6].DB_MAX_OUTPUT_PORT_TYPE
trigger_write_address[7] <= \buffer_manager:last_trigger_address_var[7].DB_MAX_OUTPUT_PORT_TYPE
trigger_write_address[8] <= \buffer_manager:last_trigger_address_var[8].DB_MAX_OUTPUT_PORT_TYPE
is_buffer_wrapped_once <= is_buffer_wrapped_once_sig.DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LPM_SHIFTREG:segment_offset_config_deserialize
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
clock => dffs[8].CLK
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[8].ENA
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => dffs[8].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffs[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffs[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= dffs[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= dffs[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= dffs[8].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram
wren_a => altsyncram_kr14:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_kr14:auto_generated.data_a[0]
data_a[1] => altsyncram_kr14:auto_generated.data_a[1]
data_a[2] => altsyncram_kr14:auto_generated.data_a[2]
data_a[3] => altsyncram_kr14:auto_generated.data_a[3]
data_a[4] => altsyncram_kr14:auto_generated.data_a[4]
data_a[5] => altsyncram_kr14:auto_generated.data_a[5]
data_a[6] => altsyncram_kr14:auto_generated.data_a[6]
data_a[7] => altsyncram_kr14:auto_generated.data_a[7]
data_b[0] => ~NO_FANOUT~
data_b[1] => ~NO_FANOUT~
data_b[2] => ~NO_FANOUT~
data_b[3] => ~NO_FANOUT~
data_b[4] => ~NO_FANOUT~
data_b[5] => ~NO_FANOUT~
data_b[6] => ~NO_FANOUT~
data_b[7] => ~NO_FANOUT~
address_a[0] => altsyncram_kr14:auto_generated.address_a[0]
address_a[1] => altsyncram_kr14:auto_generated.address_a[1]
address_a[2] => altsyncram_kr14:auto_generated.address_a[2]
address_a[3] => altsyncram_kr14:auto_generated.address_a[3]
address_a[4] => altsyncram_kr14:auto_generated.address_a[4]
address_a[5] => altsyncram_kr14:auto_generated.address_a[5]
address_a[6] => altsyncram_kr14:auto_generated.address_a[6]
address_a[7] => altsyncram_kr14:auto_generated.address_a[7]
address_a[8] => altsyncram_kr14:auto_generated.address_a[8]
address_b[0] => altsyncram_kr14:auto_generated.address_b[0]
address_b[1] => altsyncram_kr14:auto_generated.address_b[1]
address_b[2] => altsyncram_kr14:auto_generated.address_b[2]
address_b[3] => altsyncram_kr14:auto_generated.address_b[3]
address_b[4] => altsyncram_kr14:auto_generated.address_b[4]
address_b[5] => altsyncram_kr14:auto_generated.address_b[5]
address_b[6] => altsyncram_kr14:auto_generated.address_b[6]
address_b[7] => altsyncram_kr14:auto_generated.address_b[7]
address_b[8] => altsyncram_kr14:auto_generated.address_b[8]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_kr14:auto_generated.clock0
clock1 => altsyncram_kr14:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => altsyncram_kr14:auto_generated.clocken1
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= <GND>
q_a[1] <= <GND>
q_a[2] <= <GND>
q_a[3] <= <GND>
q_a[4] <= <GND>
q_a[5] <= <GND>
q_a[6] <= <GND>
q_a[7] <= <GND>
q_b[0] <= altsyncram_kr14:auto_generated.q_b[0]
q_b[1] <= altsyncram_kr14:auto_generated.q_b[1]
q_b[2] <= altsyncram_kr14:auto_generated.q_b[2]
q_b[3] <= altsyncram_kr14:auto_generated.q_b[3]
q_b[4] <= altsyncram_kr14:auto_generated.q_b[4]
q_b[5] <= altsyncram_kr14:auto_generated.q_b[5]
q_b[6] <= altsyncram_kr14:auto_generated.q_b[6]
q_b[7] <= altsyncram_kr14:auto_generated.q_b[7]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_kr14:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[6] => ram_block1a7.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
address_a[7] => ram_block1a7.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_a[8] => ram_block1a1.PORTAADDR8
address_a[8] => ram_block1a2.PORTAADDR8
address_a[8] => ram_block1a3.PORTAADDR8
address_a[8] => ram_block1a4.PORTAADDR8
address_a[8] => ram_block1a5.PORTAADDR8
address_a[8] => ram_block1a6.PORTAADDR8
address_a[8] => ram_block1a7.PORTAADDR8
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[6] => ram_block1a1.PORTBADDR6
address_b[6] => ram_block1a2.PORTBADDR6
address_b[6] => ram_block1a3.PORTBADDR6
address_b[6] => ram_block1a4.PORTBADDR6
address_b[6] => ram_block1a5.PORTBADDR6
address_b[6] => ram_block1a6.PORTBADDR6
address_b[6] => ram_block1a7.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[7] => ram_block1a1.PORTBADDR7
address_b[7] => ram_block1a2.PORTBADDR7
address_b[7] => ram_block1a3.PORTBADDR7
address_b[7] => ram_block1a4.PORTBADDR7
address_b[7] => ram_block1a5.PORTBADDR7
address_b[7] => ram_block1a6.PORTBADDR7
address_b[7] => ram_block1a7.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
address_b[8] => ram_block1a1.PORTBADDR8
address_b[8] => ram_block1a2.PORTBADDR8
address_b[8] => ram_block1a3.PORTBADDR8
address_b[8] => ram_block1a4.PORTBADDR8
address_b[8] => ram_block1a5.PORTBADDR8
address_b[8] => ram_block1a6.PORTBADDR8
address_b[8] => ram_block1a7.PORTBADDR8
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
clocken1 => ram_block1a0.ENA1
clocken1 => ram_block1a1.ENA1
clocken1 => ram_block1a2.ENA1
clocken1 => ram_block1a3.ENA1
clocken1 => ram_block1a4.ENA1
clocken1 => ram_block1a5.ENA1
clocken1 => ram_block1a6.ENA1
clocken1 => ram_block1a7.ENA1
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
data_a[7] => ram_block1a7.PORTADATAIN
q_b[0] <= ram_block1a0.PORTBDATAOUT
q_b[1] <= ram_block1a1.PORTBDATAOUT
q_b[2] <= ram_block1a2.PORTBDATAOUT
q_b[3] <= ram_block1a3.PORTBDATAOUT
q_b[4] <= ram_block1a4.PORTBDATAOUT
q_b[5] <= ram_block1a5.PORTBDATAOUT
q_b[6] <= ram_block1a6.PORTBDATAOUT
q_b[7] <= ram_block1a7.PORTBDATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a0.ENA0
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a1.ENA0
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a2.ENA0
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a3.ENA0
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a4.ENA0
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a5.ENA0
wren_a => ram_block1a6.PORTAWE
wren_a => ram_block1a6.ENA0
wren_a => ram_block1a7.PORTAWE
wren_a => ram_block1a7.ENA0


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem
wren => _.IN0
data[0] => cells[1][0].DATAIN
data[0] => cells[0][0].DATAIN
data[1] => cells[1][1].DATAIN
data[1] => cells[0][1].DATAIN
data[2] => cells[1][2].DATAIN
data[2] => cells[0][2].DATAIN
data[3] => cells[1][3].DATAIN
data[3] => cells[0][3].DATAIN
data[4] => cells[1][4].DATAIN
data[4] => cells[0][4].DATAIN
data[5] => cells[1][5].DATAIN
data[5] => cells[0][5].DATAIN
data[6] => cells[1][6].DATAIN
data[6] => cells[0][6].DATAIN
data[7] => cells[1][7].DATAIN
data[7] => cells[0][7].DATAIN
data[8] => cells[1][8].DATAIN
data[8] => cells[0][8].DATAIN
data[9] => cells[1][9].DATAIN
data[9] => cells[0][9].DATAIN
data[10] => cells[1][10].DATAIN
data[10] => cells[0][10].DATAIN
data[11] => cells[1][11].DATAIN
data[11] => cells[0][11].DATAIN
data[12] => cells[1][12].DATAIN
data[12] => cells[0][12].DATAIN
data[13] => cells[1][13].DATAIN
data[13] => cells[0][13].DATAIN
data[14] => cells[1][14].DATAIN
data[14] => cells[0][14].DATAIN
data[15] => cells[1][15].DATAIN
data[15] => cells[0][15].DATAIN
data[16] => cells[1][16].DATAIN
data[16] => cells[0][16].DATAIN
data[17] => cells[1][17].DATAIN
data[17] => cells[0][17].DATAIN
data[18] => cells[1][18].DATAIN
data[18] => cells[0][18].DATAIN
wraddress[0] => lpm_decode:wdecoder.data[0]
inclock => cells[1][18].CLK
inclock => cells[1][17].CLK
inclock => cells[1][16].CLK
inclock => cells[1][15].CLK
inclock => cells[1][14].CLK
inclock => cells[1][13].CLK
inclock => cells[1][12].CLK
inclock => cells[1][11].CLK
inclock => cells[1][10].CLK
inclock => cells[1][9].CLK
inclock => cells[1][8].CLK
inclock => cells[1][7].CLK
inclock => cells[1][6].CLK
inclock => cells[1][5].CLK
inclock => cells[1][4].CLK
inclock => cells[1][3].CLK
inclock => cells[1][2].CLK
inclock => cells[1][1].CLK
inclock => cells[1][0].CLK
inclock => cells[0][18].CLK
inclock => cells[0][17].CLK
inclock => cells[0][16].CLK
inclock => cells[0][15].CLK
inclock => cells[0][14].CLK
inclock => cells[0][13].CLK
inclock => cells[0][12].CLK
inclock => cells[0][11].CLK
inclock => cells[0][10].CLK
inclock => cells[0][9].CLK
inclock => cells[0][8].CLK
inclock => cells[0][7].CLK
inclock => cells[0][6].CLK
inclock => cells[0][5].CLK
inclock => cells[0][4].CLK
inclock => cells[0][3].CLK
inclock => cells[0][2].CLK
inclock => cells[0][1].CLK
inclock => cells[0][0].CLK
inclocken => _.IN1
rden => ~NO_FANOUT~
rdaddress[0] => xraddr[0].DATAIN
outclock => xq[18].CLK
outclock => xq[17].CLK
outclock => xq[16].CLK
outclock => xq[15].CLK
outclock => xq[14].CLK
outclock => xq[13].CLK
outclock => xq[12].CLK
outclock => xq[11].CLK
outclock => xq[10].CLK
outclock => xq[9].CLK
outclock => xq[8].CLK
outclock => xq[7].CLK
outclock => xq[6].CLK
outclock => xq[5].CLK
outclock => xq[4].CLK
outclock => xq[3].CLK
outclock => xq[2].CLK
outclock => xq[1].CLK
outclock => xq[0].CLK
outclock => xraddr[0].CLK
outclocken => xq[18].ENA
outclocken => xq[17].ENA
outclocken => xq[16].ENA
outclocken => xq[15].ENA
outclocken => xq[14].ENA
outclocken => xq[13].ENA
outclocken => xq[12].ENA
outclocken => xq[11].ENA
outclocken => xq[10].ENA
outclocken => xq[9].ENA
outclocken => xq[8].ENA
outclocken => xq[7].ENA
outclocken => xq[6].ENA
outclocken => xq[5].ENA
outclocken => xq[4].ENA
outclocken => xq[3].ENA
outclocken => xq[2].ENA
outclocken => xq[1].ENA
outclocken => xq[0].ENA
outclocken => xraddr[0].ENA
aclr => ~NO_FANOUT~
byteena[0] => ~NO_FANOUT~
wraddressstall => ~NO_FANOUT~
rdaddressstall => ~NO_FANOUT~
q[0] <= xq[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= xq[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= xq[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= xq[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= xq[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= xq[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= xq[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= xq[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= xq[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= xq[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= xq[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= xq[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= xq[12].DB_MAX_OUTPUT_PORT_TYPE
q[13] <= xq[13].DB_MAX_OUTPUT_PORT_TYPE
q[14] <= xq[14].DB_MAX_OUTPUT_PORT_TYPE
q[15] <= xq[15].DB_MAX_OUTPUT_PORT_TYPE
q[16] <= xq[16].DB_MAX_OUTPUT_PORT_TYPE
q[17] <= xq[17].DB_MAX_OUTPUT_PORT_TYPE
q[18] <= xq[18].DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|lpm_mux:mux
data[0][0] => mux_0tc:auto_generated.data[0]
data[0][1] => mux_0tc:auto_generated.data[1]
data[0][2] => mux_0tc:auto_generated.data[2]
data[0][3] => mux_0tc:auto_generated.data[3]
data[0][4] => mux_0tc:auto_generated.data[4]
data[0][5] => mux_0tc:auto_generated.data[5]
data[0][6] => mux_0tc:auto_generated.data[6]
data[0][7] => mux_0tc:auto_generated.data[7]
data[0][8] => mux_0tc:auto_generated.data[8]
data[0][9] => mux_0tc:auto_generated.data[9]
data[0][10] => mux_0tc:auto_generated.data[10]
data[0][11] => mux_0tc:auto_generated.data[11]
data[0][12] => mux_0tc:auto_generated.data[12]
data[0][13] => mux_0tc:auto_generated.data[13]
data[0][14] => mux_0tc:auto_generated.data[14]
data[0][15] => mux_0tc:auto_generated.data[15]
data[0][16] => mux_0tc:auto_generated.data[16]
data[0][17] => mux_0tc:auto_generated.data[17]
data[0][18] => mux_0tc:auto_generated.data[18]
data[1][0] => mux_0tc:auto_generated.data[19]
data[1][1] => mux_0tc:auto_generated.data[20]
data[1][2] => mux_0tc:auto_generated.data[21]
data[1][3] => mux_0tc:auto_generated.data[22]
data[1][4] => mux_0tc:auto_generated.data[23]
data[1][5] => mux_0tc:auto_generated.data[24]
data[1][6] => mux_0tc:auto_generated.data[25]
data[1][7] => mux_0tc:auto_generated.data[26]
data[1][8] => mux_0tc:auto_generated.data[27]
data[1][9] => mux_0tc:auto_generated.data[28]
data[1][10] => mux_0tc:auto_generated.data[29]
data[1][11] => mux_0tc:auto_generated.data[30]
data[1][12] => mux_0tc:auto_generated.data[31]
data[1][13] => mux_0tc:auto_generated.data[32]
data[1][14] => mux_0tc:auto_generated.data[33]
data[1][15] => mux_0tc:auto_generated.data[34]
data[1][16] => mux_0tc:auto_generated.data[35]
data[1][17] => mux_0tc:auto_generated.data[36]
data[1][18] => mux_0tc:auto_generated.data[37]
sel[0] => mux_0tc:auto_generated.sel[0]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_0tc:auto_generated.result[0]
result[1] <= mux_0tc:auto_generated.result[1]
result[2] <= mux_0tc:auto_generated.result[2]
result[3] <= mux_0tc:auto_generated.result[3]
result[4] <= mux_0tc:auto_generated.result[4]
result[5] <= mux_0tc:auto_generated.result[5]
result[6] <= mux_0tc:auto_generated.result[6]
result[7] <= mux_0tc:auto_generated.result[7]
result[8] <= mux_0tc:auto_generated.result[8]
result[9] <= mux_0tc:auto_generated.result[9]
result[10] <= mux_0tc:auto_generated.result[10]
result[11] <= mux_0tc:auto_generated.result[11]
result[12] <= mux_0tc:auto_generated.result[12]
result[13] <= mux_0tc:auto_generated.result[13]
result[14] <= mux_0tc:auto_generated.result[14]
result[15] <= mux_0tc:auto_generated.result[15]
result[16] <= mux_0tc:auto_generated.result[16]
result[17] <= mux_0tc:auto_generated.result[17]
result[18] <= mux_0tc:auto_generated.result[18]


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|lpm_mux:mux|mux_0tc:auto_generated
data[0] => result_node[0].IN1
data[1] => result_node[1].IN1
data[2] => result_node[2].IN1
data[3] => result_node[3].IN1
data[4] => result_node[4].IN1
data[5] => result_node[5].IN1
data[6] => result_node[6].IN1
data[7] => result_node[7].IN1
data[8] => result_node[8].IN1
data[9] => result_node[9].IN1
data[10] => result_node[10].IN1
data[11] => result_node[11].IN1
data[12] => result_node[12].IN1
data[13] => result_node[13].IN1
data[14] => result_node[14].IN1
data[15] => result_node[15].IN1
data[16] => result_node[16].IN1
data[17] => result_node[17].IN1
data[18] => result_node[18].IN1
data[19] => result_node[0].IN1
data[20] => result_node[1].IN1
data[21] => result_node[2].IN1
data[22] => result_node[3].IN1
data[23] => result_node[4].IN1
data[24] => result_node[5].IN1
data[25] => result_node[6].IN1
data[26] => result_node[7].IN1
data[27] => result_node[8].IN1
data[28] => result_node[9].IN1
data[29] => result_node[10].IN1
data[30] => result_node[11].IN1
data[31] => result_node[12].IN1
data[32] => result_node[13].IN1
data[33] => result_node[14].IN1
data[34] => result_node[15].IN1
data[35] => result_node[16].IN1
data[36] => result_node[17].IN1
data[37] => result_node[18].IN1
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result_node[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result_node[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result_node[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result_node[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result_node[7].DB_MAX_OUTPUT_PORT_TYPE
result[8] <= result_node[8].DB_MAX_OUTPUT_PORT_TYPE
result[9] <= result_node[9].DB_MAX_OUTPUT_PORT_TYPE
result[10] <= result_node[10].DB_MAX_OUTPUT_PORT_TYPE
result[11] <= result_node[11].DB_MAX_OUTPUT_PORT_TYPE
result[12] <= result_node[12].DB_MAX_OUTPUT_PORT_TYPE
result[13] <= result_node[13].DB_MAX_OUTPUT_PORT_TYPE
result[14] <= result_node[14].DB_MAX_OUTPUT_PORT_TYPE
result[15] <= result_node[15].DB_MAX_OUTPUT_PORT_TYPE
result[16] <= result_node[16].DB_MAX_OUTPUT_PORT_TYPE
result[17] <= result_node[17].DB_MAX_OUTPUT_PORT_TYPE
result[18] <= result_node[18].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => result_node[18].IN0
sel[0] => _.IN0
sel[0] => result_node[17].IN0
sel[0] => _.IN0
sel[0] => result_node[16].IN0
sel[0] => _.IN0
sel[0] => result_node[15].IN0
sel[0] => _.IN0
sel[0] => result_node[14].IN0
sel[0] => _.IN0
sel[0] => result_node[13].IN0
sel[0] => _.IN0
sel[0] => result_node[12].IN0
sel[0] => _.IN0
sel[0] => result_node[11].IN0
sel[0] => _.IN0
sel[0] => result_node[10].IN0
sel[0] => _.IN0
sel[0] => result_node[9].IN0
sel[0] => _.IN0
sel[0] => result_node[8].IN0
sel[0] => _.IN0
sel[0] => result_node[7].IN0
sel[0] => _.IN0
sel[0] => result_node[6].IN0
sel[0] => _.IN0
sel[0] => result_node[5].IN0
sel[0] => _.IN0
sel[0] => result_node[4].IN0
sel[0] => _.IN0
sel[0] => result_node[3].IN0
sel[0] => _.IN0
sel[0] => result_node[2].IN0
sel[0] => _.IN0
sel[0] => result_node[1].IN0
sel[0] => _.IN0
sel[0] => result_node[0].IN0
sel[0] => _.IN0


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|lpm_decode:wdecoder
data[0] => decode_dvf:auto_generated.data[0]
enable => decode_dvf:auto_generated.enable
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
eq[0] <= decode_dvf:auto_generated.eq[0]
eq[1] <= decode_dvf:auto_generated.eq[1]


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|lpm_decode:wdecoder|decode_dvf:auto_generated
data[0] => eq_node[1].IN0
data[0] => eq_node[0].IN0
enable => eq_node[1].IN1
enable => eq_node[0].IN1
eq[0] <= eq_node[0].DB_MAX_OUTPUT_PORT_TYPE
eq[1] <= eq_node[1].DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst
tck => LPM_COUNTER:adv_point_3_and_more:advance_pointer_counter.CLOCK
tck => LPM_COUNTER:read_pointer_counter.CLOCK
tck => LPM_SHIFTREG:ram_data_shift_out.CLOCK
tck => LPM_SHIFTREG:info_data_shift_out.CLOCK
tck => LPM_COUNTER:status_advance_pointer_counter.CLOCK
tck => LPM_COUNTER:status_read_pointer_counter.CLOCK
tck => LPM_SHIFTREG:status_data_shift_out.CLOCK
sdr => offload_shift_ena.IN0
sdr => offload_start.IN0
sdr => status_offload_shift_ena.IN0
sdr => status_offload_start.IN0
sdr => LPM_SHIFTREG:info_data_shift_out.LOAD
cdr => offload_start.IN1
cdr => status_offload_start.IN1
reset_all => acq_buf_read_reset.IN0
reset_all => status_buf_read_reset.IN0
reset_all => LPM_SHIFTREG:ram_data_shift_out.ACLR
reset_all => LPM_SHIFTREG:info_data_shift_out.ACLR
reset_all => LPM_SHIFTREG:status_data_shift_out.ACLR
offload_instr_on => offload_shift_ena.IN1
offload_instr_on => offload_start.IN1
offload_ex_instr_on => status_offload_shift_ena.IN1
offload_ex_instr_on => status_offload_start.IN1
offload_ex_instr_on => offload_data_shift_out.OUTPUTSELECT
run_instr_on => acq_buf_read_reset.IN1
run_instr_on => status_buf_read_reset.IN1
pwr_up_run_instr_on => ~NO_FANOUT~
buffer_read_data_out[0] => LPM_SHIFTREG:ram_data_shift_out.DATA[0]
buffer_read_data_out[1] => LPM_SHIFTREG:ram_data_shift_out.DATA[1]
buffer_read_data_out[2] => LPM_SHIFTREG:ram_data_shift_out.DATA[2]
buffer_read_data_out[3] => LPM_SHIFTREG:ram_data_shift_out.DATA[3]
buffer_read_data_out[4] => LPM_SHIFTREG:ram_data_shift_out.DATA[4]
buffer_read_data_out[5] => LPM_SHIFTREG:ram_data_shift_out.DATA[5]
buffer_read_data_out[6] => LPM_SHIFTREG:ram_data_shift_out.DATA[6]
buffer_read_data_out[7] => LPM_SHIFTREG:ram_data_shift_out.DATA[7]
status_read_data_out[0] => LPM_SHIFTREG:status_data_shift_out.DATA[0]
status_read_data_out[1] => LPM_SHIFTREG:status_data_shift_out.DATA[1]
status_read_data_out[2] => LPM_SHIFTREG:status_data_shift_out.DATA[2]
status_read_data_out[3] => LPM_SHIFTREG:status_data_shift_out.DATA[3]
status_read_data_out[4] => LPM_SHIFTREG:status_data_shift_out.DATA[4]
status_read_data_out[5] => LPM_SHIFTREG:status_data_shift_out.DATA[5]
status_read_data_out[6] => LPM_SHIFTREG:status_data_shift_out.DATA[6]
status_read_data_out[7] => LPM_SHIFTREG:status_data_shift_out.DATA[7]
status_read_data_out[8] => LPM_SHIFTREG:status_data_shift_out.DATA[8]
status_read_data_out[9] => LPM_SHIFTREG:status_data_shift_out.DATA[9]
status_read_data_out[10] => LPM_SHIFTREG:status_data_shift_out.DATA[10]
status_read_data_out[11] => LPM_SHIFTREG:status_data_shift_out.DATA[11]
status_read_data_out[12] => LPM_SHIFTREG:status_data_shift_out.DATA[12]
status_read_data_out[13] => LPM_SHIFTREG:status_data_shift_out.DATA[13]
status_read_data_out[14] => LPM_SHIFTREG:status_data_shift_out.DATA[14]
status_read_data_out[15] => LPM_SHIFTREG:status_data_shift_out.DATA[15]
status_read_data_out[16] => LPM_SHIFTREG:status_data_shift_out.DATA[16]
status_read_data_out[17] => LPM_SHIFTREG:status_data_shift_out.DATA[17]
status_read_data_out[18] => LPM_SHIFTREG:status_data_shift_out.DATA[18]
trigger_write_address[0] => LPM_SHIFTREG:info_data_shift_out.DATA[10]
trigger_write_address[1] => LPM_SHIFTREG:info_data_shift_out.DATA[11]
trigger_write_address[2] => LPM_SHIFTREG:info_data_shift_out.DATA[12]
trigger_write_address[3] => LPM_SHIFTREG:info_data_shift_out.DATA[13]
trigger_write_address[4] => LPM_SHIFTREG:info_data_shift_out.DATA[14]
trigger_write_address[5] => LPM_SHIFTREG:info_data_shift_out.DATA[15]
trigger_write_address[6] => LPM_SHIFTREG:info_data_shift_out.DATA[16]
trigger_write_address[7] => LPM_SHIFTREG:info_data_shift_out.DATA[17]
trigger_write_address[8] => LPM_SHIFTREG:info_data_shift_out.DATA[18]
last_buffer_write_address[0] => LPM_SHIFTREG:info_data_shift_out.DATA[1]
last_buffer_write_address[1] => LPM_SHIFTREG:info_data_shift_out.DATA[2]
last_buffer_write_address[2] => LPM_SHIFTREG:info_data_shift_out.DATA[3]
last_buffer_write_address[3] => LPM_SHIFTREG:info_data_shift_out.DATA[4]
last_buffer_write_address[4] => LPM_SHIFTREG:info_data_shift_out.DATA[5]
last_buffer_write_address[5] => LPM_SHIFTREG:info_data_shift_out.DATA[6]
last_buffer_write_address[6] => LPM_SHIFTREG:info_data_shift_out.DATA[7]
last_buffer_write_address[7] => LPM_SHIFTREG:info_data_shift_out.DATA[8]
last_buffer_write_address[8] => LPM_SHIFTREG:info_data_shift_out.DATA[9]
is_buffer_wrapped_once => LPM_SHIFTREG:info_data_shift_out.DATA[0]
buffer_read_address[0] <= LPM_COUNTER:read_pointer_counter.Q[0]
buffer_read_address[1] <= LPM_COUNTER:read_pointer_counter.Q[1]
buffer_read_address[2] <= LPM_COUNTER:read_pointer_counter.Q[2]
buffer_read_address[3] <= LPM_COUNTER:read_pointer_counter.Q[3]
buffer_read_address[4] <= LPM_COUNTER:read_pointer_counter.Q[4]
buffer_read_address[5] <= LPM_COUNTER:read_pointer_counter.Q[5]
buffer_read_address[6] <= LPM_COUNTER:read_pointer_counter.Q[6]
buffer_read_address[7] <= LPM_COUNTER:read_pointer_counter.Q[7]
buffer_read_address[8] <= LPM_COUNTER:read_pointer_counter.Q[8]
status_read_address[0] <= LPM_COUNTER:status_read_pointer_counter.Q[0]
offload_data_shift_out <= offload_data_shift_out.DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|LPM_COUNTER:\adv_point_3_and_more:advance_pointer_counter
clock => cntr_vei:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_vei:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_vei:auto_generated.q[0]
q[1] <= cntr_vei:auto_generated.q[1]
q[2] <= cntr_vei:auto_generated.q[2]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|LPM_COUNTER:\adv_point_3_and_more:advance_pointer_counter|cntr_vei:auto_generated
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|LPM_COUNTER:read_pointer_counter
clock => cntr_h6j:auto_generated.clock
clk_en => cntr_h6j:auto_generated.clk_en
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_h6j:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_h6j:auto_generated.q[0]
q[1] <= cntr_h6j:auto_generated.q[1]
q[2] <= cntr_h6j:auto_generated.q[2]
q[3] <= cntr_h6j:auto_generated.q[3]
q[4] <= cntr_h6j:auto_generated.q[4]
q[5] <= cntr_h6j:auto_generated.q[5]
q[6] <= cntr_h6j:auto_generated.q[6]
q[7] <= cntr_h6j:auto_generated.q[7]
q[8] <= cntr_h6j:auto_generated.q[8]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|LPM_COUNTER:read_pointer_counter|cntr_h6j:auto_generated
clk_en => counter_reg_bit[8].IN0
clock => counter_reg_bit[8].CLK
clock => counter_reg_bit[7].CLK
clock => counter_reg_bit[6].CLK
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter_reg_bit[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter_reg_bit[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter_reg_bit[8].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|LPM_SHIFTREG:ram_data_shift_out
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => dffs[7].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|LPM_SHIFTREG:info_data_shift_out
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
data[12] => _.IN1
data[13] => _.IN1
data[14] => _.IN1
data[15] => _.IN1
data[16] => _.IN1
data[17] => _.IN1
data[18] => _.IN1
clock => dffs[18].CLK
clock => dffs[17].CLK
clock => dffs[16].CLK
clock => dffs[15].CLK
clock => dffs[14].CLK
clock => dffs[13].CLK
clock => dffs[12].CLK
clock => dffs[11].CLK
clock => dffs[10].CLK
clock => dffs[9].CLK
clock => dffs[8].CLK
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[18].ENA
enable => dffs[17].ENA
enable => dffs[16].ENA
enable => dffs[15].ENA
enable => dffs[14].ENA
enable => dffs[13].ENA
enable => dffs[12].ENA
enable => dffs[11].ENA
enable => dffs[10].ENA
enable => dffs[9].ENA
enable => dffs[8].ENA
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => dffs[18].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q[12].DB_MAX_OUTPUT_PORT_TYPE
q[13] <= q[13].DB_MAX_OUTPUT_PORT_TYPE
q[14] <= q[14].DB_MAX_OUTPUT_PORT_TYPE
q[15] <= q[15].DB_MAX_OUTPUT_PORT_TYPE
q[16] <= q[16].DB_MAX_OUTPUT_PORT_TYPE
q[17] <= q[17].DB_MAX_OUTPUT_PORT_TYPE
q[18] <= q[18].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|LPM_COUNTER:status_advance_pointer_counter
clock => cntr_jgi:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_jgi:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_jgi:auto_generated.q[0]
q[1] <= cntr_jgi:auto_generated.q[1]
q[2] <= cntr_jgi:auto_generated.q[2]
q[3] <= cntr_jgi:auto_generated.q[3]
q[4] <= cntr_jgi:auto_generated.q[4]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|LPM_COUNTER:status_advance_pointer_counter|cntr_jgi:auto_generated
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|LPM_COUNTER:status_advance_pointer_counter|cntr_jgi:auto_generated|cmpr_rgc:cmpr1
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => data_wire[0].IN0
dataa[1] => data_wire[0].IN0
dataa[2] => data_wire[1].IN0
dataa[3] => data_wire[1].IN0
dataa[4] => data_wire[2].IN0
datab[0] => data_wire[0].IN1
datab[1] => data_wire[0].IN1
datab[2] => data_wire[1].IN1
datab[3] => data_wire[1].IN1
datab[4] => data_wire[2].IN1


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|LPM_COUNTER:status_read_pointer_counter
clock => cntr_23j:auto_generated.clock
clk_en => cntr_23j:auto_generated.clk_en
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => cntr_23j:auto_generated.sclr
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_23j:auto_generated.q[0]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|LPM_COUNTER:status_read_pointer_counter|cntr_23j:auto_generated
clk_en => counter_reg_bit[0].IN0
clock => counter_reg_bit[0].CLK
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|LPM_COUNTER:status_read_pointer_counter|cntr_23j:auto_generated|cmpr_ngc:cmpr1
aeb <= aeb_result_wire[0].DB_MAX_OUTPUT_PORT_TYPE
dataa[0] => aneb_result_wire[0].IN0
datab[0] => aneb_result_wire[0].IN1


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|LPM_SHIFTREG:status_data_shift_out
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
data[12] => _.IN1
data[13] => _.IN1
data[14] => _.IN1
data[15] => _.IN1
data[16] => _.IN1
data[17] => _.IN1
data[18] => _.IN1
clock => dffs[18].CLK
clock => dffs[17].CLK
clock => dffs[16].CLK
clock => dffs[15].CLK
clock => dffs[14].CLK
clock => dffs[13].CLK
clock => dffs[12].CLK
clock => dffs[11].CLK
clock => dffs[10].CLK
clock => dffs[9].CLK
clock => dffs[8].CLK
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[18].ENA
enable => dffs[17].ENA
enable => dffs[16].ENA
enable => dffs[15].ENA
enable => dffs[14].ENA
enable => dffs[13].ENA
enable => dffs[12].ENA
enable => dffs[11].ENA
enable => dffs[10].ENA
enable => dffs[9].ENA
enable => dffs[8].ENA
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => dffs[18].IN0
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q[12].DB_MAX_OUTPUT_PORT_TYPE
q[13] <= q[13].DB_MAX_OUTPUT_PORT_TYPE
q[14] <= q[14].DB_MAX_OUTPUT_PORT_TYPE
q[15] <= q[15].DB_MAX_OUTPUT_PORT_TYPE
q[16] <= q[16].DB_MAX_OUTPUT_PORT_TYPE
q[17] <= q[17].DB_MAX_OUTPUT_PORT_TYPE
q[18] <= q[18].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr
ROM_DATA[0] => Mux3.IN66
ROM_DATA[1] => Mux2.IN66
ROM_DATA[2] => Mux1.IN66
ROM_DATA[3] => Mux0.IN66
ROM_DATA[4] => Mux3.IN62
ROM_DATA[5] => Mux2.IN62
ROM_DATA[6] => Mux1.IN62
ROM_DATA[7] => Mux0.IN62
ROM_DATA[8] => Mux3.IN58
ROM_DATA[9] => Mux2.IN58
ROM_DATA[10] => Mux1.IN58
ROM_DATA[11] => Mux0.IN58
ROM_DATA[12] => Mux3.IN54
ROM_DATA[13] => Mux2.IN54
ROM_DATA[14] => Mux1.IN54
ROM_DATA[15] => Mux0.IN54
ROM_DATA[16] => Mux3.IN50
ROM_DATA[17] => Mux2.IN50
ROM_DATA[18] => Mux1.IN50
ROM_DATA[19] => Mux0.IN50
ROM_DATA[20] => Mux3.IN46
ROM_DATA[21] => Mux2.IN46
ROM_DATA[22] => Mux1.IN46
ROM_DATA[23] => Mux0.IN46
ROM_DATA[24] => Mux3.IN42
ROM_DATA[25] => Mux2.IN42
ROM_DATA[26] => Mux1.IN42
ROM_DATA[27] => Mux0.IN42
ROM_DATA[28] => Mux3.IN38
ROM_DATA[29] => Mux2.IN38
ROM_DATA[30] => Mux1.IN38
ROM_DATA[31] => Mux0.IN38
TCK => WORD_SR[0].CLK
TCK => WORD_SR[1].CLK
TCK => WORD_SR[2].CLK
TCK => WORD_SR[3].CLK
TCK => word_counter[0].CLK
TCK => word_counter[1].CLK
TCK => word_counter[2].CLK
TCK => word_counter[3].CLK
SHIFT => word_counter.OUTPUTSELECT
SHIFT => word_counter.OUTPUTSELECT
SHIFT => word_counter.OUTPUTSELECT
SHIFT => word_counter.OUTPUTSELECT
SHIFT => WORD_SR.OUTPUTSELECT
SHIFT => WORD_SR.OUTPUTSELECT
SHIFT => WORD_SR.OUTPUTSELECT
SHIFT => WORD_SR.OUTPUTSELECT
UPDATE => clear_signal.IN0
USR1 => clear_signal.IN1
ENA => word_counter.OUTPUTSELECT
ENA => word_counter.OUTPUTSELECT
ENA => word_counter.OUTPUTSELECT
ENA => word_counter.OUTPUTSELECT
ENA => WORD_SR.OUTPUTSELECT
ENA => WORD_SR.OUTPUTSELECT
ENA => WORD_SR.OUTPUTSELECT
ENA => WORD_SR.OUTPUTSELECT
TDI => WORD_SR.DATAA
TDO <= WORD_SR[0].DB_MAX_OUTPUT_PORT_TYPE


|ADDA|SIGN:inst3|sld_signaltap:sld_signaltap_component|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LPM_SHIFTREG:status_register
data[0] => _.IN1
data[1] => _.IN1
data[2] => _.IN1
data[3] => _.IN1
data[4] => _.IN1
data[5] => _.IN1
data[6] => _.IN1
data[7] => _.IN1
data[8] => _.IN1
data[9] => _.IN1
data[10] => _.IN1
data[11] => _.IN1
data[12] => _.IN1
data[13] => _.IN1
data[14] => _.IN1
data[15] => _.IN1
clock => dffs[15].CLK
clock => dffs[14].CLK
clock => dffs[13].CLK
clock => dffs[12].CLK
clock => dffs[11].CLK
clock => dffs[10].CLK
clock => dffs[9].CLK
clock => dffs[8].CLK
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[15].ENA
enable => dffs[14].ENA
enable => dffs[13].ENA
enable => dffs[12].ENA
enable => dffs[11].ENA
enable => dffs[10].ENA
enable => dffs[9].ENA
enable => dffs[8].ENA
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
shiftin => _.IN1
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
load => _.IN0
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
sclr => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
sset => _.IN0
q[0] <= q[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= q[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= q[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= q[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= q[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= q[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= q[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= q[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= q[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= q[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= q[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= q[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= q[12].DB_MAX_OUTPUT_PORT_TYPE
q[13] <= q[13].DB_MAX_OUTPUT_PORT_TYPE
q[14] <= q[14].DB_MAX_OUTPUT_PORT_TYPE
q[15] <= q[15].DB_MAX_OUTPUT_PORT_TYPE
shiftout <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE


